{"version":3,"sources":["../node_modules/@toruslabs/broadcast-channel/dist/lib/util.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/util.js","../../src/BaseController.ts","../../src/createEventEmitterProxy.ts","../../src/Network/INetworkController.ts","../../src/enums.ts","../../src/Embed/CommunicationWindowManager.ts","../../src/utils/utils.ts","../../src/Network/createFetchMiddleware.ts","../../src/Network/createLoggerMiddleware.ts","../../src/Preferences/BasePreferencesController.ts","../../src/Transaction/ITransactionController.ts","../node_modules/@toruslabs/broadcast-channel/dist/lib/options.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../../../src/index.ts","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../src/baseProvider.ts","../../src/commonPrivateKeyProvider.ts","../../src/utils.ts","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/index.es5.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/index.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/broadcast-channel.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/method-chooser.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/methods/native.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/methods/indexed-db.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/methods/localstorage.js","../node_modules/@toruslabs/broadcast-channel/dist/lib/methods/server.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../src/MetadataStorageLayer.ts","../../src/webAuthnShareResolver.ts","../node_modules/@toruslabs/broadcast-channel/dist/lib/methods/simulate.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","PROMISE_RESOLVED_VOID","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_FALSE","are3PCSupported","navigator","browserInfo","_bowser","parse","userAgent","log","info","JSON","stringify","thirdPartyCookieSupport","brave","engine","name","ENGINE_MAP","WebKit","Gecko","isPromise","obj","then","microSeconds","ms","Date","getTime","lastMs","additional","randomInt","min","max","Math","floor","random","randomToken","toString","substring","setLogLevel","sleep","time","resolveWith","Promise","res","setTimeout","_loglevel","resolve","getLogger","setLevel","level","module","__esModule","Emitter","key","prototype","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","byteLength","str","c","l","charCodeAt","utf8Length","ceil","size","constructor","config","state","defaultConfig","defaultState","configure","overwrite","fullUpdate","update","initialize","filterNoop","internalEvents","externalEventFilter","eventFilter","finalOpts","target","setTarget","newTarget","oldTarget","eventEmitter","getRawListeners","handler","get","set","createRandomId","getCreateRandomId","provider","err","serializeError","fallbackError","message","code","ethErrors","req","id","jsonrpc","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","CREATE_WINDOW","CLOSE_WINDOW","USER_LOGGED_IN","USER_LOGGED_OUT","COMMUNICATION_JRPC_METHODS","LOGOUT","WALLET_INSTANCE_ID","USER_INFO","SET_PROVIDER","TOPUP","OPENED_WINDOW","CLOSED_WINDOW","GET_PROVIDER_STATE","LOGIN_WITH_PRIVATE_KEY","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","CHAIN_CHANGED","UNLOCK_STATE_CHANGED","hexString","targetLength","String","getHeaders","signMessage","privKey","Buffer","stripHexPrefix","msgSig","ecsign","v","r","s","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","padWithZeroes","toUnsigned","sStr","vStr","hex","intToHex","addHexPrefix","concatSig","intToBuffer","RETRIABLE_ERRORS","fetchRes","data","body","error","originHttpHeaderKey","parsedUrl","payload","method","params","originDomain","fetchParams","headers","Accept","fetchUrl","createFetchMiddleware","createAsyncMiddleware","createFetchConfigFromReq","rpcTarget","maxAttempts","retryInterval","attempt","fetch","checkForHttpErrors","fetchBody","result","parseResponse","errMsg","phrase","timeout","next","callback","response","request","options","TransactionStatus","fillOptionsWithDefaults","originalOptions","undefined","support3PC","_util","webWorkerSupport","idb","ttl","fallbackInterval","onclose","localstorage","removeTimeout","server","url","methods","TransportError","reason","description","context","type","Error","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","decodePacket","binaryType","onPacket","details","globalThisShim","self","window","Function","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","withNativeBlob","Blob","call","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","encodePacket","supportsBinary","isView","buffer","chars","lookup","Uint8Array","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","SEPARATOR","fromCharCode","encodePayload","encodedPackets","count","join","decodePayload","encodedPayload","decodedPacket","protocol","ObliviousSet","encode","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","WalletInitializationError","chainId","chainConfig","networks","addChain","getChainConfig","getProviderEngineProxy","updateProviderEngineProxy","createEventEmitterProxy","CommonPrivateKeyProvider","setupProvider","privKeyMiddleware","providerFromEngine","switchChain","getPrivKeyMiddleware","middleware","getPrivatekey","createPrivKeyMiddleware","createScaffoldMiddleware","private_key","providerFactory","runtime","regeneratorRuntime","accidentalStrictMode","prev","alphabet","map","seed","num","encoded","yeast","now","_index","BroadcastChannel","enforceOptions","enumerable","_broadcastChannel","OPEN_BROADCAST_CHANNELS","ENFORCED_OPTIONS","_methodChooser","_options","Set","lastId","add","chooseMethod","_iL","_onML","_addEL","internal","_uMP","_befC","_prepP","channel","maybePromise","_state","_prepareChannel","_post","broadcastChannel","msg","msgObj","sendPromise","postMessage","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","hundredMsInMicro","minMessageTime","onMessage","_startListening","_removeListenerObject","filter","o","_stopListening","_pubkey","closed","postInternal","onmessage","listenObj","find","close","_this","awaitPrepare","all","from","isClosed","chooseMethods","concat","METHODS","Boolean","_simulate","ret","m","useMethod","canBeUsed","_native","_indexedDb","_localstorage","_server","averageResponseTime","channelName","messagesCallback","bc","subFns","channelState","messageJson","reject","_default","TRANSACTION_SETTINGS","cleanOldMessages","commitIndexedDBTransaction","createDatabase","getAllMessages","db","tx","transaction","OBJECT_STORE_ID","objectStore","openCursor","onsuccess","ev","cursor","getIdb","getMessagesHigherThan","getOldMessages","removeMessagesById","writeMessage","_obliviousSet","durability","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","commit","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","rej","onerror","readerUuid","writeObject","uuid","oncomplete","lastCursorId","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","e","openCursorRequest","ids","deleteRequest","olderThen","msgObk","tooOld","eMIs","writeBlockPromise","readQueuePromises","_readLoop","readNewMessages","newerMessages","useMessages","has","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","addStorageEventListener","getLocalStorage","removeStorageEventListener","storageKey","localStorage","writeObj","token","setItem","document","createEvent","initEvent","newValue","dispatchEvent","listener","ls","removeItem","toLowerCase","includes","defaultTime","getSocketInstance","keccak256","SOCKET_CONN_INSTANCE","disconnect","setupSocketConnection","_regenerator","_asyncToGenerator2","_socket","_eccrypto","_metadataHelpers","_keccak","a","digest","mark","_callee","channelEncPrivKey","encData","wrap","_context","encryptData","sent","t0","getPublic","t1","sign","t2","signature","abrupt","serverUrl","stop","SOCKET_CONN","io","transports","withCredentials","reconnectionDelayMax","reconnectionAttempts","_callee2","_context2","debug","transport","socketConn","channelPubKey","connected","_ref4","_callee4","decData","_context4","decryptData","_x","visibilityListener","visibilityState","_callee3","_context3","isReactNative","product","WS","forceBase64","check","uri","protocols","extraHeaders","ws","usingBrowserWebSocket","WebSocket","defaultBinaryType","addEventListeners","onopen","autoUnref","unref","onOpen","closeEvent","onData","onError","lastPacket","compress","perMessageDeflate","threshold","send","nextTick","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","indexOf","path","MozWebSocket","createKeccakHash","ec","metadataHost","serverTimeOffset","generateMetadataParams","setData","timestamp","sig","pub_key_X","pub_key_Y","set_data","generatePubKeyParams","setMetadata","namespace","post","useAPIKey","metadataResponse","getMetadata","setAPIKey","setEmbedHost","WEBAUTHN_TORUS_SHARE","WEBAUTHN_DEVICE_SHARE","iv","encParamsHex","ephemPublicKey","ciphertext","mac","encParams","serializedDec","serializedBuf","encrypt","encParamsBufToHex","sData","encParamsHexToBuf","keyPair","decrypt","pubKey","serializedData","metadataParams","refKeyPair","x","webAuthnPubKey","y","getAndDecryptData","d","serializedSubspaceData","serializedSubspaceDataBuf","encSubspaceData","encSubspaceDataHex","encryptAndSetData","subspaceData","SIMULATE_CHANNELS","XMLHttpRequest","hasCORS","XHR","xdomain","empty","hasXHR2","responseType","Polling","polling","location","isSSL","xd","xs","poll","onPause","pause","total","doPoll","doWrite","sid","assign","Request","xhrStatus","pollXhr","async","xscheme","xhr","setDisableHeaderCheck","setRequestHeader","requestTimeout","onreadystatechange","status","onLoad","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","websocket","re","parts","src","b","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","probe","onHandshake","resetPingTimeout","sendPacket","filterUpgrades","maxPayload","getWritablePackets","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnecting","newListener","receiveBuffer","sendBuffer","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","emitEvent","_anyListeners","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","factor","jitter","attempts","duration","pow","rand","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionDelay","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","active","_close","delay","onreconnect","cache","parsed","loc","test","href","sameNamespace","forceNew","multiplex"],"mappings":"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","file":"static/js/1.ef880c75.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PROMISE_RESOLVED_VOID = exports.PROMISE_RESOLVED_TRUE = exports.PROMISE_RESOLVED_FALSE = void 0;\nexports.are3PCSupported = are3PCSupported;\nexports.isPromise = isPromise;\nexports.log = void 0;\nexports.microSeconds = microSeconds;\nexports.randomInt = randomInt;\nexports.randomToken = randomToken;\nexports.setLogLevel = void 0;\nexports.sleep = sleep;\n\nvar _bowser = _interopRequireDefault(require(\"bowser\"));\n\nvar _loglevel = _interopRequireDefault(require(\"loglevel\"));\n\n/**\n * returns true if the given object is a promise\n */\nfunction isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexports.PROMISE_RESOLVED_FALSE = PROMISE_RESOLVED_FALSE;\nvar PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexports.PROMISE_RESOLVED_TRUE = PROMISE_RESOLVED_TRUE;\nvar PROMISE_RESOLVED_VOID = Promise.resolve();\nexports.PROMISE_RESOLVED_VOID = PROMISE_RESOLVED_VOID;\n\nfunction sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\n\nfunction randomToken() {\n  return Math.random().toString(36).substring(2);\n}\n\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nfunction microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n\nfunction are3PCSupported() {\n  if (typeof navigator === 'undefined') return false;\n\n  var browserInfo = _bowser[\"default\"].parse(navigator.userAgent);\n\n  log.info(JSON.stringify(browserInfo), 'current browser info');\n  var thirdPartyCookieSupport = true; // brave\n\n  if (navigator.brave) {\n    thirdPartyCookieSupport = false;\n  } // All webkit & gecko engine instances use itp (intelligent tracking prevention -\n  // https://webkit.org/tracking-prevention/#intelligent-tracking-prevention-itp)\n\n\n  if (browserInfo.engine.name === _bowser[\"default\"].ENGINE_MAP.WebKit || browserInfo.engine.name === _bowser[\"default\"].ENGINE_MAP.Gecko) {\n    thirdPartyCookieSupport = false;\n  }\n\n  return thirdPartyCookieSupport;\n}\n\nvar log = _loglevel[\"default\"].getLogger('broadcast-channel');\n\nexports.log = log;\nlog.setLevel('error');\n\nvar setLogLevel = function setLogLevel(level) {\n  log.setLevel(level);\n};\n\nexports.setLogLevel = setLogLevel;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter, JRPCEngine, createAsyncMiddleware, mergeMiddleware, createScaffoldMiddleware } from '@toruslabs/openlogin-jrpc';\nimport { serializeError, ethErrors } from 'eth-rpc-errors';\nimport getCreateRandomId from 'json-rpc-random-id';\nimport { BigNumber } from 'bignumber.js';\nimport { fromSigned, bufferToInt, toUnsigned, stripHexPrefix, addHexPrefix, hashPersonalMessage, ecsign, intToBuffer } from 'ethereumjs-util';\nimport log from 'loglevel';\nimport { BroadcastChannel } from '@toruslabs/broadcast-channel';\nimport { get, post, patch, remove } from '@toruslabs/http-helpers';\nimport bowser from 'bowser';\nimport { cloneDeep, pickBy, omitBy } from 'lodash';\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * Controller class that provides configuration, state management, and subscriptions\n */\n\nclass BaseController extends SafeEventEmitter {\n  /**\n   * Default options used to configure this controller\n   */\n\n  /**\n   * Default state set on this controller\n   */\n\n  /**\n   * Determines if listeners are notified of state changes\n   */\n\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a BaseController instance. Both initial state and initial\n   * configuration options are merged with defaults upon initialization.\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor(_ref) {\n    let {\n      config = {},\n      state = {}\n    } = _ref;\n    super(); // Use assign since generics can't be spread: https://git.io/vpRhY\n\n    _defineProperty(this, \"defaultConfig\", {});\n\n    _defineProperty(this, \"defaultState\", {});\n\n    _defineProperty(this, \"disabled\", false);\n\n    _defineProperty(this, \"name\", \"BaseController\");\n\n    _defineProperty(this, \"initialConfig\", void 0);\n\n    _defineProperty(this, \"initialState\", void 0);\n\n    _defineProperty(this, \"internalConfig\", this.defaultConfig);\n\n    _defineProperty(this, \"internalState\", this.defaultState);\n\n    this.initialState = state;\n    this.initialConfig = config;\n  }\n  /**\n   * Retrieves current controller configuration options\n   *\n   * @returns - Current configuration\n   */\n\n\n  get config() {\n    return this.internalConfig;\n  }\n  /**\n   * Retrieves current controller state\n   *\n   * @returns - Current state\n   */\n\n\n  get state() {\n    return this.internalState;\n  }\n  /**\n   * Updates controller configuration\n   *\n   * @param config - New configuration options\n   * @param overwrite - Overwrite config instead of merging\n   * @param fullUpdate - Boolean that defines if the update is partial or not\n   */\n\n\n  configure(config) {\n    let overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let fullUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (fullUpdate) {\n      this.internalConfig = overwrite ? config : Object.assign(this.internalConfig, config);\n\n      for (const key in this.internalConfig) {\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this[key] = this.internalConfig[key];\n        }\n      }\n    } else {\n      for (const key in config) {\n        /* istanbul ignore else */\n        if (typeof this.internalConfig[key] !== \"undefined\") {\n          this.internalConfig[key] = config[key];\n          this[key] = config[key];\n        }\n      }\n    }\n  }\n  /**\n   * Updates controller state\n   *\n   * @param state - New state\n   * @param overwrite - Overwrite state instead of merging\n   */\n\n\n  update(state) {\n    let overwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.internalState = overwrite ? _objectSpread$3({}, state) : _objectSpread$3(_objectSpread$3({}, this.internalState), state);\n    this.emit(\"store\", this.internalState);\n  }\n  /**\n   * Enables the controller. This sets each config option as a member\n   * variable on this instance and triggers any defined setters. This\n   * also sets initial state and triggers any listeners.\n   *\n   * @returns - This controller instance\n   */\n\n\n  initialize() {\n    this.internalState = this.defaultState;\n    this.internalConfig = this.defaultConfig;\n    this.configure(this.initialConfig);\n    this.update(this.initialState);\n    return this;\n  }\n\n}\n\nconst sec = 1000;\n\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue;\n\nconst blockTrackerEvents = [\"sync\", \"latest\"];\nclass BaseBlockTracker extends BaseController {\n  constructor(_ref) {\n    let {\n      config = {},\n      state = {}\n    } = _ref;\n    super({\n      config,\n      state\n    }); // config\n\n    _defineProperty(this, \"name\", \"BaseBlockTracker\");\n\n    _defineProperty(this, \"_blockResetTimeout\", void 0);\n\n    this.defaultState = {\n      _currentBlock: {\n        idempotencyKey: \"\"\n      },\n      _isRunning: false\n    };\n    this.defaultConfig = {\n      blockResetDuration: 20 * sec\n    };\n    this.initialize(); // bind functions for internal use\n\n    this._onNewListener = this._onNewListener.bind(this);\n    this._onRemoveListener = this._onRemoveListener.bind(this);\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this); // listen for handler changes\n\n    this._setupInternalEvents();\n  }\n\n  isRunning() {\n    return this.state._isRunning;\n  }\n\n  getCurrentBlock() {\n    return this.state._currentBlock;\n  }\n\n  async getLatestBlock() {\n    // return if available\n    if (this.state._currentBlock) {\n      return this.state._currentBlock;\n    } // wait for a new latest block\n\n\n    const latestBlock = await new Promise(resolve => this.once(\"latest\", newState => {\n      if (newState._currentBlock) {\n        resolve(newState._currentBlock);\n      }\n    })); // return newly set current block\n\n    return latestBlock;\n  } // dont allow module consumer to remove our internal event listeners\n\n\n  removeAllListeners(eventName) {\n    if (eventName) {\n      super.removeAllListeners(eventName);\n    } else {\n      super.removeAllListeners();\n    } // re-add internal events\n\n\n    this._setupInternalEvents(); // trigger stop check just in case\n\n\n    this._onRemoveListener();\n\n    return this;\n  }\n  /**\n   * To be implemented in subclass.\n   */\n\n\n  _start() {// default behavior is noop\n  }\n  /**\n   * To be implemented in subclass.\n   */\n\n\n  _end() {// default behavior is noop\n  }\n\n  _newPotentialLatest(newBlock) {\n    const currentBlock = this.state._currentBlock; // only update if blok number is higher\n\n    if (currentBlock && newBlock.idempotencyKey === currentBlock.idempotencyKey) {\n      return;\n    }\n\n    this._setCurrentBlock(newBlock);\n  }\n\n  _setupInternalEvents() {\n    // first remove listeners for idempotency\n    this.removeListener(\"newListener\", this._onNewListener);\n    this.removeListener(\"removeListener\", this._onRemoveListener); // then add them\n\n    this.on(\"removeListener\", this._onRemoveListener);\n    this.on(\"newListener\", this._onNewListener);\n  }\n\n  _onNewListener() {\n    this._maybeStart();\n  }\n\n  _onRemoveListener() {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) {\n      return;\n    }\n\n    this._maybeEnd();\n  }\n\n  _maybeStart() {\n    if (this.state._isRunning) {\n      return;\n    }\n\n    this.state._isRunning = true; // cancel setting latest block to stale\n\n    this._cancelBlockResetTimeout();\n\n    this._start();\n  }\n\n  _maybeEnd() {\n    if (!this.state._isRunning) {\n      return;\n    }\n\n    this.state._isRunning = false;\n\n    this._setupBlockResetTimeout();\n\n    this._end();\n  }\n\n  _getBlockTrackerEventCount() {\n    return blockTrackerEvents.map(eventName => this.listenerCount(eventName)).reduce(calculateSum);\n  }\n\n  _setCurrentBlock(newBlock) {\n    const oldBlock = this.state._currentBlock;\n    this.update({\n      _currentBlock: newBlock\n    });\n    this.emit(\"latest\", newBlock);\n    this.emit(\"sync\", {\n      oldBlock,\n      newBlock\n    });\n  }\n\n  _setupBlockResetTimeout() {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout(); // clear latest block when stale\n\n\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this.config.blockResetDuration); // nodejs - dont hold process open\n\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref();\n    }\n  }\n\n  _cancelBlockResetTimeout() {\n    if (this._blockResetTimeout) {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }\n\n  _resetCurrentBlock() {\n    this.update({\n      _currentBlock: {\n        idempotencyKey: \"\"\n      }\n    });\n  }\n\n}\n\nconst filterNoop = () => true;\n\nconst internalEvents = [\"newListener\", \"removeListener\"];\n\nconst externalEventFilter = name => !internalEvents.includes(name);\n\nfunction getRawListeners(eventEmitter, name) {\n  // prefer native\n  return eventEmitter.rawListeners(name);\n}\n\nfunction createEventEmitterProxy(initialTarget, opts) {\n  // parse options\n  const finalOpts = opts || {};\n  let eventFilter = finalOpts.eventFilter || filterNoop;\n  if (typeof eventFilter === \"string\" && eventFilter === \"skipInternal\") eventFilter = externalEventFilter;\n  if (typeof eventFilter !== \"function\") throw new Error(\"createEventEmitterProxy - Invalid eventFilter\");\n  let target = initialTarget;\n\n  let setTarget = newTarget => {\n    const oldTarget = target;\n    target = newTarget;\n    oldTarget.eventNames().filter(eventFilter).forEach(name => {\n      getRawListeners(oldTarget, name).forEach(handler => newTarget.on(name, handler));\n    }); // remove old listeners\n\n    oldTarget.removeAllListeners();\n  };\n\n  const proxy = new Proxy({}, {\n    get: (_, name) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: (_, name, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\n\nfunction createSwappableProxy(initialTarget) {\n  let target = initialTarget;\n\n  let setTarget = newTarget => {\n    target = newTarget;\n  };\n\n  const proxy = new Proxy({}, {\n    get: (_, name) => {\n      // override `setTarget` access\n      if (name === \"setTarget\") return setTarget;\n      return target[name];\n    },\n    set: (_, name, value) => {\n      // allow `setTarget` overrides\n      if (name === \"setTarget\") {\n        setTarget = value;\n        return true;\n      }\n\n      target[name] = value;\n      return true;\n    }\n  });\n  return proxy;\n}\n\nconst POLLING_INTERVAL = 600000;\nclass BaseCurrencyController extends BaseController {\n  constructor(_ref) {\n    let {\n      config = {},\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n    this.defaultState = {\n      currentCurrency: \"usd\",\n      conversionRate: 0,\n      conversionDate: \"N/A\",\n      nativeCurrency: \"ETH\"\n    };\n    this.defaultConfig = {\n      pollInterval: POLLING_INTERVAL\n    };\n    this.initialize();\n  } //\n  // PUBLIC METHODS\n  //\n\n\n  getNativeCurrency() {\n    return this.state.nativeCurrency;\n  }\n\n  setNativeCurrency(nativeCurrency) {\n    this.update({\n      nativeCurrency,\n      ticker: nativeCurrency\n    });\n  }\n\n  getCurrentCurrency() {\n    return this.state.currentCurrency;\n  }\n\n  setCurrentCurrency(currentCurrency) {\n    this.update({\n      currentCurrency\n    });\n  }\n  /**\n   * A getter for the conversionRate property\n   *\n   * @returns The conversion rate from ETH to the selected currency.\n   *\n   */\n\n\n  getConversionRate() {\n    return this.state.conversionRate;\n  }\n\n  setConversionRate(conversionRate) {\n    this.update({\n      conversionRate\n    });\n  }\n  /**\n   * A getter for the conversionDate property\n   *\n   * @returns The date at which the conversion rate was set. Expressed in milliseconds since midnight of\n   * January 1, 1970\n   *\n   */\n\n\n  getConversionDate() {\n    return this.state.conversionDate;\n  }\n\n  setConversionDate(conversionDate) {\n    this.update({\n      conversionDate\n    });\n  }\n\n}\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst createRandomId = getCreateRandomId();\nfunction providerFromEngine(engine) {\n  const provider = new SafeEventEmitter(); // handle both rpc send methods\n\n  provider.sendAsync = async req => {\n    const res = await engine.handle(req);\n\n    if (res.error) {\n      var _res$error, _res$error2;\n\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: ((_res$error = res.error) === null || _res$error === void 0 ? void 0 : _res$error.message) || res.error.toString(),\n          code: ((_res$error2 = res.error) === null || _res$error2 === void 0 ? void 0 : _res$error2.code) || -32603\n        }\n      });\n      throw ethErrors.rpc.internal(err);\n    }\n\n    return res.result;\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  provider.send = (req, callback) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n\n    engine.handle(req, callback);\n  }; // forward notifications\n\n\n  if (engine.on) {\n    engine.on(\"notification\", message => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async args => {\n    const req = _objectSpread$2(_objectSpread$2({}, args), {}, {\n      id: createRandomId(),\n      jsonrpc: \"2.0\"\n    });\n\n    const res = await provider.sendAsync(req);\n    return res;\n  };\n\n  return provider;\n}\nfunction providerFromMiddleware(middleware) {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider = providerFromEngine(engine);\n  return provider;\n}\nfunction providerAsMiddleware(provider) {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes = await provider.sendAsync(req);\n      res.result = providerRes;\n      return end();\n    } catch (error) {\n      return end(error.message);\n    }\n  };\n}\n\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 700,\n  width: 450\n};\nconst POPUP_LOADED = \"popup_loaded\";\nconst POPUP_RESULT = \"popup_result\";\nconst SETUP_COMPLETE = \"setup_complete\";\nconst ACTIVITY_ACTION_ALL = \"walletActivity.allTransactions\";\nconst ACTIVITY_ACTION_SEND = \"walletActivity.send\";\nconst ACTIVITY_ACTION_RECEIVE = \"walletActivity.receive\";\nconst ACTIVITY_ACTION_TOPUP = \"walletActivity.topup\";\nconst ACTIVITY_PERIOD_ALL = \"walletActivity.all\";\nconst ACTIVITY_PERIOD_WEEK_ONE = \"walletActivity.lastOneWeek\";\nconst ACTIVITY_PERIOD_MONTH_ONE = \"walletActivity.lastOneMonth\";\nconst ACTIVITY_PERIOD_MONTH_SIX = \"walletActivity.lastSixMonts\";\nconst ACTIVITY_STATUS_SUCCESSFUL = \"walletActivity.successful\";\nconst ACTIVITY_STATUS_UNSUCCESSFUL = \"walletActivity.unsuccessful\";\nconst ACTIVITY_STATUS_PENDING = \"walletActivity.pending\";\nconst ACTIVITY_STATUS_CANCELLED = \"walletActivity.cancelled\";\nconst ACTIVITY_STATUS_CANCELLING = \"walletActivity.cancelling\";\nconst COMMUNICATION_NOTIFICATIONS = {\n  IFRAME_STATUS: \"iframe_status\",\n  // Tell embed to create the window\n  CREATE_WINDOW: \"create_window\",\n  // Tell embed to close the window\n  CLOSE_WINDOW: \"close_window\",\n  USER_LOGGED_IN: \"user_logged_in\",\n  USER_LOGGED_OUT: \"user_logged_out\"\n};\nconst COMMUNICATION_JRPC_METHODS = {\n  LOGOUT: \"logout\",\n  WALLET_INSTANCE_ID: \"wallet_instance_id\",\n  USER_INFO: \"user_info\",\n  SET_PROVIDER: \"set_provider\",\n  TOPUP: \"topup\",\n  IFRAME_STATUS: \"iframe_status\",\n  // embed has opened the window as requested\n  OPENED_WINDOW: \"opened_window\",\n  // user has closed the window from embed's side\n  CLOSED_WINDOW: \"closed_window\",\n  GET_PROVIDER_STATE: \"get_provider_state\",\n  LOGIN_WITH_PRIVATE_KEY: \"login_with_private_key\"\n};\nconst PROVIDER_JRPC_METHODS = {\n  GET_PROVIDER_STATE: \"wallet_get_provider_state\"\n};\nconst PROVIDER_NOTIFICATIONS = {\n  ACCOUNTS_CHANGED: \"wallet_accounts_changed\",\n  CHAIN_CHANGED: \"wallet_chain_changed\",\n  UNLOCK_STATE_CHANGED: \"wallet_unlock_state_changed\"\n};\nconst BROADCAST_CHANNELS = {\n  REDIRECT_CHANNEL: \"redirect_channel\",\n  PROVIDER_CHANGE_CHANNEL: \"torus_provider_change_channel\",\n  TRANSACTION_CHANNEL: \"torus_channel\",\n  MESSAGE_CHANNEL: \"torus_message_channel\",\n  WALLET_LOGOUT_CHANNEL: \"wallet_logout_channel\",\n  WALLET_SELECTED_ADDRESS_CHANNEL: \"wallet_selected_address_channel\",\n  WALLET_NETWORK_CHANGE_CHANNEL: \"wallet_network_change_channel\",\n  WALLET_ACCOUNT_IMPORT_CHANNEL: \"wallet_account_import_channel\",\n  THEME_CHANGE: \"theme_change_channel\"\n};\nconst BROADCAST_CHANNELS_MSGS = {\n  LOGOUT: \"logout\",\n  ACCOUNT_IMPORTED: \"account_imported\",\n  SELECTED_ADDRESS_CHANGE: \"selected_address_change\",\n  NETWORK_CHANGE: \"network_change\",\n  SET_THEME: \"set_theme\"\n};\n\nfunction createChangeProviderMiddlewareMiddleware(_ref) {\n  let {\n    changeProvider\n  } = _ref;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== COMMUNICATION_JRPC_METHODS.SET_PROVIDER) return next();\n    if (!changeProvider) throw new Error(\"CommunicationMiddleware - opts.changeProvider not provided\");\n    response.result = await changeProvider(request);\n  });\n}\nfunction createTopupMiddleware(_ref2) {\n  let {\n    topup\n  } = _ref2;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== COMMUNICATION_JRPC_METHODS.TOPUP) return next();\n    if (!topup) throw new Error(\"CommunicationMiddleware - opts.topup not provided\");\n    response.result = await topup(request);\n  });\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== targetMethod) return next();\n    if (!handler) throw new Error(\"CommunicationMiddleware - \".concat(targetMethod, \" not provided\"));\n    const result = await handler(request);\n\n    if (!result) {\n      return next();\n    }\n\n    response.result = result;\n    return undefined;\n  });\n}\nfunction createCommunicationMiddleware(providerHandlers) {\n  const {\n    getUserInfo,\n    getWalletInstanceId,\n    topup,\n    logout,\n    changeProvider,\n    setIFrameStatus,\n    handleWindowRpc,\n    getProviderState,\n    loginWithPrivateKey\n  } = providerHandlers;\n  return mergeMiddleware([createChangeProviderMiddlewareMiddleware({\n    changeProvider\n  }), createTopupMiddleware({\n    topup\n  }), createScaffoldMiddleware({\n    [COMMUNICATION_JRPC_METHODS.LOGOUT]: logout,\n    [COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID]: getWalletInstanceId,\n    [COMMUNICATION_JRPC_METHODS.USER_INFO]: getUserInfo,\n    [COMMUNICATION_JRPC_METHODS.IFRAME_STATUS]: setIFrameStatus,\n    // Do this in the orchestrator because communicationWindowManager needs to be passed into PopupHandlers\n    [COMMUNICATION_JRPC_METHODS.OPENED_WINDOW]: handleWindowRpc,\n    [COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW]: handleWindowRpc,\n    [COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE]: getProviderState\n  }), createGenericJRPCMiddleware(COMMUNICATION_JRPC_METHODS.LOGIN_WITH_PRIVATE_KEY, loginWithPrivateKey)]);\n}\n\nclass BaseEmbedController extends BaseController {\n  constructor(_ref) {\n    let {\n      config = {},\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"_communicationProviderProxy\", void 0);\n\n    this.defaultState = {\n      buttonPosition: \"bottom-right\",\n      isIFrameFullScreen: true,\n      apiKey: \"torus-default\",\n      oauthModalVisibility: false,\n      loginInProgress: false,\n      dappMetadata: {\n        name: \"\",\n        icon: \"\"\n      }\n    };\n    this.initialize();\n  }\n  /**\n   * Called by orchestrator once while initializing the class\n   * @param handlers - JRPC handlers for provider\n   * @returns - provider - Returns the providerProxy\n   */\n\n\n  initializeProvider(handlers) {\n    const engine = new JRPCEngine();\n    const communicationMiddleware = createCommunicationMiddleware(handlers);\n    engine.push(communicationMiddleware);\n    const communicationProvider = providerFromEngine(engine);\n    this.setCommunicationProvider(communicationProvider);\n  }\n\n  setCommunicationProvider(communicationProvider) {\n    if (this._communicationProviderProxy) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this._communicationProviderProxy.setTarget(communicationProvider);\n    } else {\n      this._communicationProviderProxy = createSwappableProxy(communicationProvider);\n    }\n  }\n\n}\n\nclass CommunicationWindowManager extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"handleWindowRpc\", (request, response, next, end) => {\n      const {\n        method,\n        params\n      } = request;\n\n      if (method === COMMUNICATION_JRPC_METHODS.OPENED_WINDOW) {\n        const {\n          windowId\n        } = params; // I've been informed that a window has been opened\n\n        this.emit(\"\".concat(windowId, \":opened\"));\n        response.result = true;\n        end();\n      } else if (method === COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW) {\n        const {\n          windowId\n        } = params; // I've been informed that a window has been closed\n\n        this.emit(\"\".concat(windowId, \":closed\"));\n        response.result = true;\n        end();\n      } else {\n        next();\n      }\n    });\n  }\n\n}\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\n\nconst getTxStatusText = txStatus => {\n  switch (txStatus) {\n    case \"rejected\":\n    case \"unapproved\":\n    case \"failed\":\n      return ACTIVITY_STATUS_UNSUCCESSFUL;\n\n    case \"confirmed\":\n      return ACTIVITY_STATUS_SUCCESSFUL;\n\n    case \"submitted\":\n      return ACTIVITY_STATUS_PENDING;\n\n    case \"cancelled\":\n      return ACTIVITY_STATUS_CANCELLED;\n\n    default:\n      return \"\";\n  }\n};\n\n/**\n * General utility functions\n */\n\nfunction intToHex(i) {\n  const hex = i.toString(16);\n  return \"0x\".concat(hex);\n}\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\n\nconst randomId = () => Math.random().toString(36).slice(2);\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\n\nfunction padWithZeroes(hexString, targetLength) {\n  if (hexString !== \"\" && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\"Expected an unprefixed hex string. Received: \".concat(hexString));\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\"Expected a non-negative integer target length. Received: \".concat(targetLength));\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, \"0\");\n}\n/**\n * Concatenate an extended ECDSA signature into a hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature.\n */\n\nfunction concatSig(v, r, s) {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString(\"hex\"), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString(\"hex\"), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\nfunction timeout$1(duration) {\n  return new Promise(resolve => {\n    const timeoutRef = window.setTimeout(() => {\n      resolve();\n      window.clearTimeout(timeoutRef);\n    }, duration);\n  });\n}\nconst getHeaders = jwt => {\n  return {\n    headers: {\n      Authorization: \"Bearer \".concat(jwt),\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    }\n  };\n};\n/**\n * Text/number formatting utilities\n */\n\nconst formatSmallNumbers = function (number) {\n  let currency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"usd\";\n  let noTilde = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const finalNumber = BigNumber.isBigNumber(number) ? number.toNumber() : number;\n  if (!Number.isFinite(finalNumber)) return \"\";\n  const value = currency.toLowerCase() === \"usd\" ? parseFloat(Number(finalNumber).toFixed(2)) : parseFloat(Number(finalNumber).toFixed(5));\n  const tilde = value > 0 ? \"~ \" : \"\";\n  return \"\".concat(currency.toLowerCase() === \"usd\" || noTilde ? \"\" : tilde).concat(Number(value), \" \").concat(currency.toUpperCase());\n};\nconst addressSlicer = function (address) {\n  let sliceLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (address.length < 11) {\n    return address;\n  }\n\n  if (typeof address !== \"string\") return \"\";\n  return \"\".concat(address.slice(0, sliceLength), \"...\").concat(address.slice(-sliceLength));\n};\nconst significantDigits = function (number) {\n  let perc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let length_ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  let input = !BigNumber.isBigNumber(number) ? new BigNumber(number) : number;\n  if (input.isZero()) return input;\n\n  if (perc) {\n    input = input.times(new BigNumber(100));\n  }\n\n  let depth;\n\n  if (input.gte(new BigNumber(1))) {\n    depth = length_;\n  } else {\n    depth = length_ - 1 + Math.ceil(Math.log10(new BigNumber(\"1\").div(input).toNumber()));\n  }\n\n  const shift = new BigNumber(10).pow(new BigNumber(depth));\n  const roundedNumber = Math.round(shift.times(input).toNumber()) / shift.toNumber();\n  return roundedNumber;\n};\nconst formatDate = inputDate => {\n  const monthList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const date = new Date(inputDate);\n  const day = date.getDate();\n  const month = monthList[date.getMonth()];\n  const year = date.getFullYear();\n  return \"\".concat(day, \" \").concat(month, \" \").concat(year);\n};\nconst formatTime = time => {\n  return new Date(time).toTimeString().slice(0, 8);\n};\n/**\n * Network utilities\n */\n\nconst transactionMatchesNetwork = (transaction, chainId) => {\n  if (typeof transaction.chainId !== \"undefined\") {\n    return transaction.chainId === chainId;\n  }\n\n  return false;\n};\n/**\n * Signing utils\n */\n\nconst hashMessage = message => {\n  const bufferedMessage = Buffer.from(message, \"utf8\");\n  const el = hashPersonalMessage(bufferedMessage);\n  return el;\n};\nconst signMessage = (privateKey, data) => {\n  const privKey = Buffer.from(privateKey, \"hex\");\n  const message = stripHexPrefix(data);\n  const msgSig = ecsign(Buffer.from(message, \"hex\"), privKey);\n  const rawMsgSig = concatSig(intToBuffer(msgSig.v), msgSig.r, msgSig.s);\n  return rawMsgSig;\n};\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nconst broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n\n};\nfunction getCustomDeviceInfo() {\n  var _navigator;\n\n  if ((_navigator = navigator) !== null && _navigator !== void 0 && _navigator.brave) {\n    return {\n      browser: \"Brave\"\n    };\n  }\n}\nclass UserError extends Error {}\nconst handleRedirectParameters = (hash, queryParameters) => {\n  const hashParameters = {};\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash.slice(1)));\n  hashUrl.searchParams.forEach((value, key) => {\n    hashParameters[key] = value;\n  });\n  let instanceParameters = {};\n  let error = \"\";\n\n  if (!queryParameters.windowId) {\n    if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n      error = hashParameters.error_description || hashParameters.error || error;\n    } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n      instanceParameters = JSON.parse(window.atob(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n      if (queryParameters.error) error = queryParameters.error;\n    }\n  }\n\n  return {\n    error,\n    instanceParameters,\n    hashParameters\n  };\n};\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass BaseKeyringController extends BaseController {\n  constructor(_ref) {\n    var _state$wallets;\n\n    let {\n      config = {},\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n    this.defaultState = {\n      wallets: (_state$wallets = state.wallets) !== null && _state$wallets !== void 0 ? _state$wallets : []\n    };\n    this.initialize();\n  } // for signing auth message\n\n\n  signAuthMessage(address, message) {\n    const keyring = this.state.wallets.find(x => x.address === address);\n\n    if (!keyring) {\n      throw new Error(\"key does not exist\");\n    }\n\n    const hashedMessage = hashMessage(message).toString(\"hex\");\n    const rawMessageSig = signMessage(keyring.privateKey, hashedMessage);\n    return rawMessageSig;\n  }\n\n}\n\nconst RETRIABLE_ERRORS = [// ignore server overload errors\n\"Gateway timeout\", \"ETIMEDOUT\", // ignore server sent html error pages\n// or truncated json responses\n\"failed to parse response body\", // ignore errors where http req failed to establish\n\"Failed to fetch\"];\n\nfunction checkForHttpErrors(fetchRes) {\n  // check for errors\n  switch (fetchRes.status) {\n    case 405:\n      throw ethErrors.rpc.methodNotFound();\n\n    case 418:\n      throw ethErrors.rpc.internal({\n        message: \"Request is being rate limited.\"\n      });\n\n    case 503:\n    case 504:\n      throw ethErrors.rpc.internal({\n        message: \"Gateway timeout. The request took too long to process.\" + \"This can happen when querying over too wide a block range.\"\n      });\n  }\n}\n\nfunction timeout(duration) {\n  return new Promise(resolve => setTimeout(resolve, duration));\n}\n\nfunction parseResponse(fetchRes, body) {\n  // check for error code\n  if (fetchRes.status !== 200) {\n    throw ethErrors.rpc.internal({\n      message: \"Non-200 status code: '\".concat(fetchRes.status, \"'\"),\n      data: body\n    });\n  } // check for rpc error\n\n\n  if (body.error) {\n    throw ethErrors.rpc.internal({\n      data: body.error\n    });\n  } // return successful result\n\n\n  return body.result;\n}\n\nfunction createFetchConfigFromReq(_ref) {\n  let {\n    req,\n    rpcTarget,\n    originHttpHeaderKey\n  } = _ref;\n  const parsedUrl = new URL(rpcTarget); // prepare payload\n  // copy only canonical json rpc properties\n\n  const payload = {\n    id: req.id,\n    jsonrpc: req.jsonrpc,\n    method: req.method,\n    params: req.params\n  }; // extract 'origin' parameter from request\n\n  const originDomain = req.origin; // serialize request body\n\n  const serializedPayload = JSON.stringify(payload); // configure fetch params\n\n  const fetchParams = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: serializedPayload\n  }; // optional: add request origin as header\n\n  if (originHttpHeaderKey && originDomain) {\n    fetchParams.headers[originHttpHeaderKey] = originDomain;\n  }\n\n  return {\n    fetchUrl: parsedUrl.href,\n    fetchParams\n  };\n}\nfunction createFetchMiddleware(_ref2) {\n  let {\n    rpcTarget,\n    originHttpHeaderKey\n  } = _ref2;\n  return createAsyncMiddleware(async (req, res, _next) => {\n    const {\n      fetchUrl,\n      fetchParams\n    } = createFetchConfigFromReq({\n      req,\n      rpcTarget,\n      originHttpHeaderKey\n    }); // attempt request multiple times\n\n    const maxAttempts = 5;\n    const retryInterval = 1000;\n\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      try {\n        const fetchRes = await fetch(fetchUrl, fetchParams); // check for http errrors\n\n        checkForHttpErrors(fetchRes); // parse response body\n\n        const fetchBody = await fetchRes.json();\n        const result = parseResponse(fetchRes, fetchBody); // set result and exit retry loop\n\n        res.result = result;\n        return;\n      } catch (err) {\n        const errMsg = err.toString();\n        const isRetriable = RETRIABLE_ERRORS.some(phrase => errMsg.includes(phrase)); // re-throw error if not retriable\n\n        if (!isRetriable) {\n          throw err;\n        }\n      } // delay before retrying\n\n\n      await timeout(retryInterval);\n    }\n  });\n}\n\nfunction createLoggerMiddleware(options) {\n  return function loggerMiddleware(request, response, next) {\n    next(callback => {\n      if (response.error) {\n        log.warn(\"Error in RPC response:\\n\", response);\n      }\n\n      if (request.isTorusInternal) return;\n      log.info(\"RPC (\".concat(options.origin, \"):\"), request, \"->\", response);\n      callback();\n    });\n  };\n}\n\nfunction createOriginMiddleware(options) {\n  return function originMiddleware(request, _, next) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    request.origin = options.origin;\n    next();\n  };\n}\n\nclass BroadcastChannelHandler {\n  constructor(channelPrefix) {\n    _defineProperty(this, \"bc\", void 0);\n\n    _defineProperty(this, \"channel\", void 0);\n\n    const queryParameters = new URLSearchParams(window.location.search);\n    const instanceId = queryParameters.get(\"instanceId\");\n    this.channel = \"\".concat(channelPrefix, \"_\").concat(instanceId);\n    this.bc = new BroadcastChannel(this.channel, broadcastChannelOptions);\n  }\n\n  getMessageFromChannel() {\n    return new Promise((resolve, reject) => {\n      this.bc.addEventListener(\"message\", async ev => {\n        this.bc.close();\n\n        if (ev.error) {\n          reject(ev.error);\n        } else {\n          resolve(ev.data);\n        }\n      });\n      this.bc.postMessage({\n        data: {\n          type: POPUP_LOADED\n        }\n      });\n    });\n  }\n\n}\n\nclass StreamWindow extends BaseController {\n  // if window has been closed by users\n  constructor(_ref) {\n    let {\n      config,\n      state = {}\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"closed\", false);\n\n    this.initialize();\n  }\n\n  async open() {\n    return new Promise((resolve, reject) => {\n      const {\n        communicationEngine,\n        communicationWindowManager\n      } = this.config;\n      let popupSuccess = false;\n      communicationWindowManager.once(\"\".concat(this.state.windowId, \":closed\"), () => {\n        this.closed = true;\n      }); // Window is not open yet\n\n      if (!this.state.windowId) {\n        this.update({\n          windowId: randomId()\n        });\n        communicationWindowManager.once(\"\".concat(this.state.windowId, \":opened\"), () => {\n          resolve(this);\n        }); // Tell the other party to create a window by prompting the user to click on something\n\n        communicationEngine.emit(\"notification\", {\n          method: COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW,\n          params: {\n            windowId: this.state.windowId,\n            url: this.state.url.href\n          }\n        });\n      } else {\n        // Send this window with `windowId` the url to open via bc\n        const bc = new BroadcastChannel(this.state.windowId, broadcastChannelOptions);\n        bc.addEventListener(\"message\", async ev => {\n          try {\n            log.info(ev, \"receiving data on channel: \".concat(bc.name));\n            const {\n              error\n            } = ev;\n\n            if (error) {\n              // Popup says some error. so, we say it's not really opened\n              reject(new Error(error));\n              return;\n            }\n\n            const {\n              message\n            } = ev.data;\n\n            if (message === POPUP_LOADED) {\n              popupSuccess = true;\n              await bc.postMessage({\n                data: {\n                  url: this.state.url.href,\n                  message: \"\" // No need of a msg\n\n                }\n              });\n              resolve(this);\n              bc.close();\n            }\n          } catch (error) {\n            reject(error);\n            bc.close(); // Something went wrong. so, we close that window\n\n            this.close();\n          }\n        }); // We don't know if the other end is ready to receive this msg. So, we keep writing until it receives and sends back something\n        // we need backoff strategy\n        // we need to wait for first attempt to succeed/fail until the second attempt\n        // If we get 429, we need to wait for a while and then try again\n\n        const postMsg = async () => {\n          // this never throws\n          const localResponse = await bc.postMessage({\n            data: {\n              message: SETUP_COMPLETE\n            }\n          });\n          return localResponse;\n        };\n\n        let currentDelay = bc.type === \"server\" ? 1000 : 200;\n\n        const recursiveFn = async () => {\n          if (!popupSuccess && !this.closed) {\n            const localResponse = await postMsg();\n\n            if (bc.type === \"server\") {\n              const serverResponse = localResponse;\n\n              if (serverResponse.status >= 400) {\n                // We need to wait for a while and then try again\n                currentDelay = Math.round(currentDelay * 1.5);\n              }\n            }\n\n            await sleep(currentDelay);\n            await recursiveFn();\n          }\n        };\n\n        recursiveFn();\n      }\n    });\n  }\n\n  close() {\n    const {\n      communicationEngine\n    } = this.config;\n    communicationEngine.emit(\"notification\", {\n      method: COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW,\n      params: {\n        windowId: this.state.windowId\n      }\n    });\n  }\n\n}\n\n/*\nScenarios:\n1. Open a normal popup window and no communication with it - Use PopupHandler\n2. Open a popup window and communicate with it - Use PopupWithBcHandler (can initiate communication by waiting for window to open or not)\n\n3. If window is already opened, pass in windowId to the popup handler.\n   This will establish communication with the popup window and sends it a new url to redirect to\n\n\nIf you're trying to open a window and it gets blocked (happens if you're in iframe or delay b/w click and opening window),\nStreamWindow is invoked and it writes in a channel to display a message to the user\n\nOnce user clicks on that modal/dialog, we pre-open the window and pass in the windowId (goes to 3)\n*/\n\n/**\n * Handles popup window management.\n * For broadcast channel communication, use url with `instanceId` coded into state parameter.\n * This state parameter will be passed across redirects according to OAuth spec.\n */\n\nclass PopupHandler extends BaseController {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    }); // this.id = randomId()\n    // Add in dapp storage key to all popups as a hash parameter\n\n    this.defaultConfig = {\n      dappStorageKey: \"\",\n      features: getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW),\n      target: \"_blank\",\n      communicationEngine: null,\n      communicationWindowManager: null\n    };\n    this.defaultState = {\n      windowTimer: null,\n      window: null,\n      iClosedWindow: false,\n      windowId: \"\",\n      url: state.url\n    };\n    this.initialize();\n\n    this._setupTimer();\n  }\n\n  async open() {\n    // if window is already open\n    const {\n      target,\n      features,\n      dappStorageKey,\n      communicationEngine,\n      communicationWindowManager\n    } = this.config;\n    const {\n      windowId,\n      url\n    } = this.state;\n\n    if (dappStorageKey) {\n      const urlHashParams = new URLSearchParams(url.hash.slice(1));\n      urlHashParams.append(\"dappStorageKey\", dappStorageKey);\n      url.hash = urlHashParams.toString();\n      this.update({\n        url\n      });\n    } // No window has been pre-opened\n\n\n    if (!windowId) {\n      // try to open a window first\n      let localWindow = window.open(url.href, target, features);\n\n      if (!localWindow) {\n        // if it's blocked, open StreamWindow\n        localWindow = new StreamWindow({\n          config: {\n            communicationEngine,\n            communicationWindowManager\n          },\n          state: {\n            url\n          }\n        });\n        localWindow.open();\n      }\n\n      this.update({\n        window: localWindow\n      });\n      return;\n    } // A window has been pre-opened with a query parameter `windowId`\n\n\n    const localWindow = new StreamWindow({\n      config: {\n        communicationEngine,\n        communicationWindowManager\n      },\n      state: {\n        url,\n        windowId\n      }\n    });\n    this.update({\n      window: localWindow\n    });\n    await localWindow.open();\n  }\n\n  close() {\n    this.update({\n      iClosedWindow: true\n    });\n    const {\n      window\n    } = this.state;\n    if (window) window.close();\n  }\n\n  _setupTimer() {\n    const timer = window.setInterval(() => {\n      const {\n        window,\n        windowTimer,\n        iClosedWindow\n      } = this.state;\n\n      if (window && window.closed) {\n        if (windowTimer) clearInterval(windowTimer);\n\n        if (!iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.update({\n          iClosedWindow: false,\n          window: null\n        });\n      }\n\n      if (window === null && windowTimer) clearInterval(windowTimer);\n    }, 500);\n    this.update({\n      windowTimer: timer\n    });\n  }\n\n}\n\nclass PopupStoreChannel {\n  constructor(_ref) {\n    let {\n      instanceId,\n      handleLogout,\n      handleAccountImport,\n      handleNetworkChange,\n      handleSelectedAddressChange,\n      handleThemeChange\n    } = _ref;\n\n    _defineProperty(this, \"handleLogout\", void 0);\n\n    _defineProperty(this, \"handleAccountImport\", void 0);\n\n    _defineProperty(this, \"handleNetworkChange\", void 0);\n\n    _defineProperty(this, \"handleThemeChange\", void 0);\n\n    _defineProperty(this, \"handleSelectedAddressChange\", void 0);\n\n    _defineProperty(this, \"instanceId\", void 0);\n\n    this.instanceId = instanceId;\n    this.handleLogout = handleLogout;\n    this.handleAccountImport = handleAccountImport;\n    this.handleNetworkChange = handleNetworkChange;\n    this.handleSelectedAddressChange = handleSelectedAddressChange;\n    this.handleThemeChange = handleThemeChange;\n  }\n\n  setupStoreChannels() {\n    this.logoutChannel();\n    this.importAccountChannel();\n    this.networkChangeChannel();\n    this.selectedAddressChangeChannel();\n    this.themeChangedChannel();\n  }\n\n  logoutChannel() {\n    const logoutChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_LOGOUT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    logoutChannel.addEventListener(\"message\", ev => {\n      var _ev$data;\n\n      log.info(\"received logout message\", ev);\n\n      if (!ev.error && ((_ev$data = ev.data) === null || _ev$data === void 0 ? void 0 : _ev$data.type) === BROADCAST_CHANNELS_MSGS.LOGOUT) {\n        log.info(\"Logging Out\");\n        this.handleLogout();\n      }\n    });\n  }\n\n  importAccountChannel() {\n    const walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_ACCOUNT_IMPORT_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    walletAccountImportChannel.addEventListener(\"message\", ev => {\n      var _ev$data2;\n\n      if (!ev.error && ((_ev$data2 = ev.data) === null || _ev$data2 === void 0 ? void 0 : _ev$data2.type) === BROADCAST_CHANNELS_MSGS.ACCOUNT_IMPORTED) {\n        var _ev$data3;\n\n        this.handleAccountImport((_ev$data3 = ev.data) === null || _ev$data3 === void 0 ? void 0 : _ev$data3.privKey);\n      }\n    });\n  }\n\n  networkChangeChannel() {\n    const walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_NETWORK_CHANGE_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    walletAccountImportChannel.addEventListener(\"message\", ev => {\n      var _ev$data4;\n\n      if (!ev.error && ((_ev$data4 = ev.data) === null || _ev$data4 === void 0 ? void 0 : _ev$data4.type) === BROADCAST_CHANNELS_MSGS.NETWORK_CHANGE) {\n        var _ev$data5;\n\n        this.handleNetworkChange((_ev$data5 = ev.data) === null || _ev$data5 === void 0 ? void 0 : _ev$data5.network);\n      }\n    });\n  }\n\n  themeChangedChannel() {\n    const walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.THEME_CHANGE, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    walletAccountImportChannel.addEventListener(\"message\", ev => {\n      var _ev$data6;\n\n      log.info({\n        ev\n      });\n\n      if (!ev.error && ((_ev$data6 = ev.data) === null || _ev$data6 === void 0 ? void 0 : _ev$data6.type) === BROADCAST_CHANNELS_MSGS.SET_THEME) {\n        var _ev$data7;\n\n        this.handleThemeChange((_ev$data7 = ev.data) === null || _ev$data7 === void 0 ? void 0 : _ev$data7.theme);\n      }\n    });\n  }\n\n  selectedAddressChangeChannel() {\n    const walletAccountImportChannel = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.WALLET_SELECTED_ADDRESS_CHANNEL, \"_\").concat(this.instanceId), broadcastChannelOptions);\n    walletAccountImportChannel.addEventListener(\"message\", ev => {\n      var _ev$data8;\n\n      if (!ev.error && ((_ev$data8 = ev.data) === null || _ev$data8 === void 0 ? void 0 : _ev$data8.type) === BROADCAST_CHANNELS_MSGS.SELECTED_ADDRESS_CHANGE) {\n        var _ev$data9;\n\n        this.handleSelectedAddressChange((_ev$data9 = ev.data) === null || _ev$data9 === void 0 ? void 0 : _ev$data9.selectedAddress);\n      }\n    });\n  }\n\n}\n\n/**\n * PopupWithBcHandler is a PopupHandler which uses broadcast channel to communicate with the popup window.\n */\n\nclass PopupWithBcHandler extends PopupHandler {\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      instanceId\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"bc\", void 0);\n\n    this.bc = new BroadcastChannel(instanceId, broadcastChannelOptions);\n  }\n  /**\n   * Receives the data from popup window and closes the window\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n\n\n  handle(successExtraFn) {\n    return new Promise((resolve, reject) => {\n      const closeListener = () => {\n        this.bc.close();\n        reject(new UserError(\"user closed popup\"));\n        this.removeListener(\"close\", closeListener);\n      };\n\n      this.on(\"close\", closeListener);\n      this.bc.addEventListener(\"message\", async ev => {\n        log.info(ev, \"receiving data on channel: \".concat(this.bc.name));\n\n        try {\n          const {\n            error,\n            data\n          } = ev;\n\n          if (error) {\n            reject(new Error(error));\n            return;\n          }\n\n          if (successExtraFn) await successExtraFn.call(this, data);\n          resolve(data);\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.bc.close();\n          this.close();\n        }\n      });\n      this.open().then(() => {\n        log.info(\"opened window \".concat(this.bc.name)); // Opened window. yay.  let the bc events do their job\n\n        return undefined;\n      }).catch(err => {\n        log.error(err, \"something went wrong while opening window\");\n        reject(err);\n      });\n    });\n  }\n  /**\n   * Use this if we have to send large payloads which don't fit in query/hash params.\n   * Waits for ack that popup window is ready to receive data.\n   * Receives the data from popup window and closes the window\n   * @param payload - The data to be sent to the popup window once we have ack that window is ready to receive data\n   * @param successExtraFn - Extra function to be called after the data is received\n   * @returns The data to be received\n   */\n\n\n  handleWithHandshake(payload, successExtraFn) {\n    return new Promise((resolve, reject) => {\n      const closeListener = () => {\n        this.bc.close();\n        reject(new UserError(\"user closed popup\"));\n        this.removeListener(\"close\", closeListener);\n      };\n\n      this.on(\"close\", closeListener);\n      this.bc.addEventListener(\"message\", async ev => {\n        try {\n          log.info(ev, \"receiving data on channel: \".concat(this.bc.name));\n          const {\n            error,\n            data\n          } = ev;\n\n          if (error) {\n            reject(new Error(error));\n            return;\n          } // Do handshake\n\n\n          const {\n            type = \"\"\n          } = data;\n\n          if (type === POPUP_LOADED) {\n            // Hack with generic to use the same type for both send and receive\n            await this.bc.postMessage({\n              data: payload\n            });\n          } else if (type === POPUP_RESULT) {\n            if (successExtraFn) await successExtraFn.call(this, data);\n            resolve(data); // Must only close the bc after result is done\n\n            this.bc.close();\n            this.close();\n          }\n        } catch (error) {\n          reject(error);\n          this.bc.close();\n          this.close();\n        }\n      });\n      this.open().then(() => {\n        log.info(\"opened window \".concat(this.bc.name)); // Opened window. yay.  let the bc events do their job\n\n        return undefined;\n      }).catch(err => {\n        log.error(err, \"something went wrong while opening window\");\n        reject(err);\n      });\n    });\n  }\n\n}\n\nclass RedirectHandler {\n  constructor() {\n    _defineProperty(this, \"error\", void 0);\n\n    _defineProperty(this, \"finalQueryParams\", {});\n\n    _defineProperty(this, \"instanceParameters\", void 0);\n\n    _defineProperty(this, \"hashParameters\", void 0);\n\n    const {\n      hash\n    } = window.location;\n    const queryParameters = new URLSearchParams(window.location.search);\n    queryParameters.forEach((value, key) => {\n      this.finalQueryParams[key] = value;\n    });\n    const {\n      error,\n      instanceParameters,\n      hashParameters\n    } = handleRedirectParameters(hash, this.finalQueryParams);\n    this.error = error;\n    this.instanceParameters = instanceParameters;\n    this.hashParameters = hashParameters;\n  }\n\n  async handle() {\n    return new Promise((resolve, reject) => {\n      const {\n        finalQueryParams,\n        instanceParameters,\n        hashParameters,\n        error\n      } = this;\n      let bc;\n\n      try {\n        if (!finalQueryParams.windowId) {\n          bc = new BroadcastChannel(\"\".concat(BROADCAST_CHANNELS.REDIRECT_CHANNEL, \"_\").concat(instanceParameters.instanceId), broadcastChannelOptions);\n          bc.addEventListener(\"message\", async ev => {\n            if (ev.error) {\n              reject(ev.error);\n              window.close();\n            } else {\n              resolve();\n              bc.close();\n              log.info(\"posted\", {\n                finalQueryParams,\n                hashParameters,\n                instanceParameters\n              });\n            }\n          });\n          bc.postMessage({\n            data: {\n              instanceParams: instanceParameters,\n              hashParams: hashParameters,\n              queryParams: finalQueryParams\n            },\n            error\n          });\n          setTimeout(() => {\n            resolve();\n            window.location.href = window.location.origin + window.location.search + window.location.hash;\n          }, 5000);\n        } else {\n          bc = new BroadcastChannel(\"\".concat(finalQueryParams.windowId), broadcastChannelOptions);\n          bc.addEventListener(\"message\", async ev => {\n            const {\n              url,\n              message\n            } = ev.data;\n\n            if (url) {\n              resolve();\n              window.location.href = url;\n            } else if (message === SETUP_COMPLETE) {\n              await bc.postMessage({\n                data: {\n                  windowId: finalQueryParams.windowId,\n                  message: POPUP_LOADED\n                }\n              });\n            }\n\n            if (ev.error && ev.error !== \"\") {\n              log.error(ev.error);\n              resolve();\n              bc.close();\n            }\n          });\n        }\n      } catch (err) {\n        log.info(err, \"something went wrong\");\n        reject(err);\n        if (bc) bc.close();\n        window.close();\n      }\n    });\n  }\n\n}\n\nconst ACTIVITY_ACTION = {\n  ACTIVITY_ACTION_ALL: \"walletActivity.allTransactions\",\n  ACTIVITY_ACTION_SEND: \"walletActivity.send\",\n  ACTIVITY_ACTION_RECEIVE: \"walletActivity.receive\",\n  ACTIVITY_ACTION_TOPUP: \"walletActivity.topup\"\n};\nconst ACCOUNT_CATEGORY = {\n  NORMAL: \"normal\",\n  THRESHOLD: \"threshold\",\n  IMPORTED: \"imported\"\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nconst DEFAULT_INTERVAL = 180 * 1000;\nconst DEFAULT_PREFERENCES = {\n  selectedCurrency: \"USD\",\n  theme: \"dark\",\n  locale: \"en-US\",\n  accountType: ACCOUNT_CATEGORY.NORMAL,\n  contacts: [],\n  jwtToken: \"\",\n  fetchedPastTx: [],\n  pastTransactions: [],\n  paymentTx: [],\n  defaultPublicAddress: \"\",\n  customTokens: [],\n  customNfts: [],\n  crashReport: true,\n  userInfo: {\n    aggregateVerifier: \"\",\n    email: \"\",\n    name: \"\",\n    profileImage: \"\",\n    typeOfLogin: LOGIN_PROVIDER.GOOGLE,\n    verifier: \"\",\n    verifierId: \"\"\n  }\n};\n/**\n * Controller that stores shared settings and exposes convenience methods\n */\n\nclass BasePreferencesController extends BaseController {\n  /**\n   * Name of this controller used during composition\n   */\n\n  /**\n   * Creates a PreferencesController instance\n   *\n   * @param config - Initial options used to configure this controller\n   * @param state - Initial state to set on this controller\n   */\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      defaultPreferences,\n      signAuthMessage\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"name\", \"PreferencesController\");\n\n    _defineProperty(this, \"iframeOrigin\", void 0);\n\n    _defineProperty(this, \"signAuthMessage\", void 0);\n\n    _defineProperty(this, \"defaultPreferences\", void 0);\n\n    if (!config.api) {\n      throw new Error(\"PreferencesController - no api specified in config.\");\n    }\n\n    this.defaultState = {\n      identities: {},\n      selectedAddress: \"\",\n      lastErrorMessage: \"\",\n      lastSuccessMessage: \"\"\n    };\n    this.defaultConfig = {\n      api: config.api,\n      pollInterval: DEFAULT_INTERVAL\n    };\n    this.initialize();\n    this.defaultPreferences = _objectSpread$1(_objectSpread$1({}, DEFAULT_PREFERENCES), defaultPreferences);\n    this.signAuthMessage = signAuthMessage;\n  }\n\n  setIframeOrigin(origin) {\n    this.iframeOrigin = origin;\n  }\n\n  getAddressState(address) {\n    const selectedAddress = address || this.state.selectedAddress;\n    return this.state.identities[selectedAddress];\n  }\n  /**\n   * Sets selected address\n   *\n   * @param selectedAddress - casper account hash\n   */\n\n\n  setSelectedAddress(selectedAddress) {\n    this.update({\n      selectedAddress\n    });\n  }\n\n  async getUser(address) {\n    const user = await get(\"\".concat(this.config.api, \"/user?fetchTx=false\"), this.headers(address), {\n      useAPIKey: true\n    });\n    return user.data;\n  }\n\n  async createUser(params) {\n    const {\n      selectedCurrency,\n      theme,\n      verifier,\n      verifierId,\n      locale,\n      address\n    } = params;\n    const userPayload = {\n      default_currency: selectedCurrency,\n      theme,\n      verifier,\n      verifier_id: verifierId,\n      locale\n    };\n    await post(\"\".concat(this.config.api, \"/user\"), userPayload, this.headers(address), {\n      useAPIKey: true\n    });\n    this.updateState({\n      theme,\n      defaultPublicAddress: address,\n      selectedCurrency,\n      locale\n    }, address);\n  }\n\n  async storeUserLogin(params) {\n    const {\n      verifierId,\n      verifier,\n      options,\n      address\n    } = params;\n\n    if (!options.rehydrate) {\n      const browser = bowser.getParser(window.navigator.userAgent);\n      const specialBrowser = getCustomDeviceInfo();\n      const recordLoginPayload = {\n        os: browser.getOSName(),\n        os_version: browser.getOSVersion() || \"unidentified\",\n        browser: (specialBrowser === null || specialBrowser === void 0 ? void 0 : specialBrowser.browser) || browser.getBrowserName() || \"unidentified\",\n        browser_version: browser.getBrowserVersion() || \"unidentified\",\n        platform: browser.getPlatform().type || \"desktop\",\n        hostname: this.iframeOrigin,\n        verifier,\n        verifier_id: verifierId\n      };\n      await post(\"\".concat(this.config.api, \"/user/recordLogin\"), recordLoginPayload, this.headers(address), {\n        useAPIKey: true\n      });\n    }\n  }\n\n  async setCrashReport(isEnabled) {\n    var _this$getAddressState;\n\n    if (isEnabled === ((_this$getAddressState = this.getAddressState()) === null || _this$getAddressState === void 0 ? void 0 : _this$getAddressState.crashReport)) return true;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        enable_crash_reporter: isEnabled\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        crashReport: isEnabled\n      });\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserTheme(theme) {\n    var _this$getAddressState2;\n\n    if (theme === ((_this$getAddressState2 = this.getAddressState()) === null || _this$getAddressState2 === void 0 ? void 0 : _this$getAddressState2.theme)) return true;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        theme\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        theme\n      });\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async setUserLocale(locale) {\n    var _this$getAddressState3;\n\n    if (locale === ((_this$getAddressState3 = this.getAddressState()) === null || _this$getAddressState3 === void 0 ? void 0 : _this$getAddressState3.locale)) return;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        locale\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        locale\n      });\n      return true;\n    } catch (error) {\n      log.error(\"unable to set locale\", error);\n      return false;\n    }\n  }\n\n  async setSelectedCurrency(payload) {\n    var _this$getAddressState4;\n\n    if (payload.selectedCurrency === ((_this$getAddressState4 = this.getAddressState()) === null || _this$getAddressState4 === void 0 ? void 0 : _this$getAddressState4.selectedCurrency)) return true;\n\n    try {\n      await patch(\"\".concat(this.config.api, \"/user\"), {\n        default_currency: payload.selectedCurrency\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        selectedCurrency: payload.selectedCurrency\n      });\n      return true;\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  async addContact(contact) {\n    try {\n      var _this$getAddressState5;\n\n      const response = await post(\"\".concat(this.config.api, \"/contact\"), contact, this.headers(), {\n        useAPIKey: true\n      });\n      this.updateState({\n        contacts: [...(((_this$getAddressState5 = this.getAddressState()) === null || _this$getAddressState5 === void 0 ? void 0 : _this$getAddressState5.contacts) || []), response.data]\n      });\n      return true;\n    } catch (error) {\n      log.error(\"unable to add contact\", error);\n      return false;\n    }\n  }\n\n  async deleteContact(contactId) {\n    try {\n      var _this$getAddressState6;\n\n      const response = await remove(\"\".concat(this.config.api, \"/contact/\").concat(contactId), {}, this.headers(), {\n        useAPIKey: true\n      });\n      const finalContacts = (_this$getAddressState6 = this.getAddressState()) === null || _this$getAddressState6 === void 0 ? void 0 : _this$getAddressState6.contacts.filter(contact => contact.id !== response.data.id);\n      if (finalContacts) this.updateState({\n        contacts: [...finalContacts]\n      });\n      return true;\n    } catch (error) {\n      log.error(\"unable to delete contact\", error);\n      return false;\n    }\n  }\n\n  async revokeDiscord(idToken) {\n    try {\n      const resp = await post(\"\".concat(this.config.api, \"/revoke/discord\"), {\n        token: idToken\n      }, this.headers(), {\n        useAPIKey: true\n      });\n      log.info(resp);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  async patchPastTx(body, address) {\n    try {\n      const response = await patch(\"\".concat(this.config.api, \"/transaction\"), body, this.headers(address), {\n        useAPIKey: true\n      });\n      log.info(\"successfully patched\", response);\n    } catch (error) {\n      log.error(\"unable to patch tx\", error);\n    }\n  }\n\n  async postPastTx(tx, address) {\n    try {\n      const response = await post(\"\".concat(this.config.api, \"/transaction\"), tx, this.headers(address), {\n        useAPIKey: true\n      });\n      log.info(\"successfully posted tx\", response);\n      return response;\n    } catch (error) {\n      log.error(error, \"unable to insert transaction\");\n    }\n  }\n\n  async getWalletOrders(address) {\n    try {\n      const response = await get(\"\".concat(this.config.api, \"/transaction\"), this.headers(address), {\n        useAPIKey: true\n      });\n      return response.success ? response.data ? response.data : [] : [];\n    } catch (error) {\n      log.error(\"unable to get wallet orders tx\", error);\n      return [];\n    }\n  }\n\n  async getTopUpOrders(address) {\n    try {\n      const response = await get(\"\".concat(this.config.commonApiHost, \"/transaction\"), this.headers(address), {\n        useAPIKey: true\n      });\n      return response.data || [];\n    } catch (error) {\n      log.error(\"unable to fetch past Top up orders\", error);\n    }\n  }\n\n  async getBillBoardData() {\n    try {\n      const response = await get(\"\".concat(this.config.api, \"/billboard\"), this.headers(), {\n        useAPIKey: true\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  async getMessageForSigning(publicAddress) {\n    const response = await post(\"\".concat(this.config.api, \"/auth/message\"), {\n      public_address: publicAddress\n    }, {}, {\n      useAPIKey: true\n    });\n    return response.message;\n  }\n\n  async getTwitterId(payload) {\n    const res = await get(\"\".concat(this.config.api, \"/twitter?screen_name=\").concat(payload.nick), this.headers(), {\n      useAPIKey: true\n    });\n    return \"\".concat(payload.typeOfLogin.toLowerCase(), \"|\").concat(res.data.toString());\n  }\n\n  async sendEmail(payload) {\n    return post(\"\".concat(this.config.api, \"/transaction/sendemail\"), payload.emailObject, this.headers(), {\n      useAPIKey: true\n    });\n  }\n\n  async refreshJwt() {\n    const address = this.state.selectedAddress;\n    const messageToSign = await this.getMessageForSigning(address);\n    if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n    const signedMessage = this.signAuthMessage(address, messageToSign);\n    const response = await post(\"\".concat(this.config.api, \"/auth/verify\"), {\n      public_address: address,\n      signed_message: signedMessage\n    }, {}, {\n      useAPIKey: true\n    });\n    this.updateState({\n      jwtToken: response.token\n    }, address);\n  }\n\n  async getDappList() {\n    try {\n      const response = await get(\"\".concat(this.config.api, \"/dapps\"), this.headers(), {\n        useAPIKey: true\n      });\n      return response.success ? response.data : [];\n    } catch (error) {\n      log.error(\"unable to get billboard data\", error);\n      return [];\n    }\n  }\n\n  async init(address, userInfo, jwtToken) {\n    let response = {\n      token: jwtToken\n    };\n    if (this.getAddressState(address)) return;\n\n    if (!jwtToken) {\n      const messageToSign = await this.getMessageForSigning(address);\n      if (!messageToSign.startsWith(this.config.signInPrefix)) throw new Error(\"Cannot sign on invalid message\");\n      const signedMessage = this.signAuthMessage(address, messageToSign);\n      response = await post(\"\".concat(this.config.api, \"/auth/verify\"), {\n        public_address: address,\n        signed_message: signedMessage\n      }, {}, {\n        useAPIKey: true\n      });\n    }\n\n    this.updateState({\n      jwtToken: response.token,\n      userInfo\n    }, address);\n  }\n\n  updateState(preferences, address) {\n    const selectedAddress = address || this.state.selectedAddress;\n    const currentState = this.getAddressState(selectedAddress) || cloneDeep(this.defaultPreferences);\n\n    const mergedState = _objectSpread$1(_objectSpread$1({}, currentState), preferences);\n\n    this.update({\n      identities: _objectSpread$1(_objectSpread$1({}, this.state.identities), {}, {\n        [selectedAddress]: mergedState\n      })\n    });\n    return mergedState;\n  }\n\n  headers(address) {\n    var _this$getAddressState7;\n\n    const selectedAddress = address || this.state.selectedAddress;\n    return getHeaders(((_this$getAddressState7 = this.getAddressState(selectedAddress)) === null || _this$getAddressState7 === void 0 ? void 0 : _this$getAddressState7.jwtToken) || \"\");\n  }\n\n}\n\n/**\n * The status of the transaction. Each status represents the state of the transaction internally\n * in the wallet. Some of these correspond with the state of the transaction on the network, but\n * some are wallet-specific.\n */\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  TransactionStatus[\"approved\"] = \"approved\";\n  TransactionStatus[\"cancelled\"] = \"cancelled\";\n  TransactionStatus[\"confirmed\"] = \"confirmed\";\n  TransactionStatus[\"failed\"] = \"failed\";\n  TransactionStatus[\"finalized\"] = \"finalized\";\n  TransactionStatus[\"processed\"] = \"processed\";\n  TransactionStatus[\"rejected\"] = \"rejected\";\n  TransactionStatus[\"signed\"] = \"signed\";\n  TransactionStatus[\"submitted\"] = \"submitted\";\n  TransactionStatus[\"unapproved\"] = \"unapproved\";\n  TransactionStatus[\"dropped\"] = \"dropped\";\n  TransactionStatus[\"expired\"] = \"expired\";\n})(TransactionStatus || (TransactionStatus = {}));\n\nconst TRANSACTION_TYPES = {\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  WASM_BASED_DEPLOY: \"wasmBasedDeploy\",\n  STANDARD_TRANSACTION: \"transaction\",\n  STANDARD_PAYMENT_TRANSACTION: \"payment_transaction\" // specific to chains like solana and casper\n\n};\nconst TX_EVENTS = {\n  TX_WARNING: \"tx:warning\",\n  TX_ERROR: \"tx:error\",\n  TX_FAILED: \"tx:failed\",\n  TX_CONFIRMED: \"tx:confirmed\",\n  TX_DROPPED: \"tx:dropped\",\n  TX_EXPIRED: \"tx:expired\",\n  TX_STATUS_UPDATE: \"tx:status_update\",\n  TX_UNAPPROVED: \"tx:unapproved\"\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass BaseTransactionStateManager extends BaseController {\n  constructor(_ref) {\n    let {\n      config,\n      state,\n      getCurrentChainId\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"getCurrentChainId\", void 0);\n\n    this.defaultConfig = {\n      txHistoryLimit: 40\n    };\n    this.defaultState = {\n      transactions: {},\n      unapprovedTxs: {},\n      currentNetworkTxsList: []\n    };\n    this.initialize();\n    this.getCurrentChainId = getCurrentChainId;\n  }\n\n  getUnapprovedTxList() {\n    const chainId = this.getCurrentChainId();\n    return pickBy(this.state.transactions, transaction => transaction.status === TransactionStatus.unapproved && transactionMatchesNetwork(transaction, chainId));\n  }\n\n  getTransaction(txId) {\n    const {\n      transactions\n    } = this.state;\n    return transactions[txId];\n  }\n\n  updateTransaction(txMeta) {\n    // commit txMeta to state\n    const txId = txMeta.id;\n    txMeta.updated_at = new Date().toISOString();\n    this.update({\n      transactions: _objectSpread(_objectSpread({}, this.state.transactions), {}, {\n        [txId]: txMeta\n      })\n    });\n  }\n\n  setTxStatusRejected(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.rejected);\n\n    this._deleteTransaction(txId);\n  }\n  /**\n   * The implementing controller can override this functionality and add custom logic + call super.()\n   */\n\n\n  setTxStatusUnapproved(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.unapproved);\n  }\n\n  setTxStatusApproved(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.approved);\n  }\n\n  setTxStatusSigned(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.signed);\n  }\n\n  setTxStatusSubmitted(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.submitted);\n  }\n\n  setTxStatusDropped(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.dropped);\n  }\n\n  setTxStatusExpired(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.expired);\n  }\n\n  setTxStatusConfirmed(txId) {\n    this._setTransactionStatus(txId, TransactionStatus.confirmed);\n  }\n\n  setTxStatusFailed(txId, error_) {\n    const error = !error_ ? new Error(\"Internal torus failure\") : error_;\n    const txMeta = this.getTransaction(txId);\n    txMeta.error = error;\n    this.updateTransaction(txMeta);\n\n    this._setTransactionStatus(txId, TransactionStatus.failed);\n  }\n  /**\n   * Method to determine if the transaction is in a final state\n   * @param status - Transaction status\n   * @returns boolean if the transaction is in a final state\n   */\n\n\n  isFinalState(status) {\n    return status === TransactionStatus.rejected || status === TransactionStatus.submitted || status === TransactionStatus.confirmed || status === TransactionStatus.failed || status === TransactionStatus.cancelled || status === TransactionStatus.expired;\n  }\n  /**\n   * Filters out the unapproved transactions from state\n   */\n\n\n  clearUnapprovedTxs() {\n    this.update({\n      transactions: omitBy(this.state.transactions, transaction => transaction.status === TransactionStatus.unapproved)\n    });\n  }\n  /**\n   * will append new transactions to old txns.\n   */\n\n\n  _addTransactionsToState(transactions) {\n    this.update({\n      transactions: transactions.reduce((result, newTx) => {\n        result[newTx.id] = newTx;\n        return result;\n      }, this.state.transactions)\n    });\n  }\n  /**\n   * will set new txns, override existing if any in state.\n   */\n\n\n  _setTransactionsToState(transactions) {\n    this.update({\n      transactions: transactions.reduce((result, newTx) => {\n        result[newTx.id] = newTx;\n        return result;\n      }, {})\n    });\n  }\n\n  _deleteTransaction(targetTransactionId) {\n    const {\n      transactions\n    } = this.state;\n    delete transactions[targetTransactionId];\n    this.update({\n      transactions\n    });\n  }\n\n  _deleteTransactions(targetTransactionIds) {\n    const {\n      transactions\n    } = this.state;\n    targetTransactionIds.forEach(transactionId => {\n      delete transactions[transactionId];\n    });\n    this.update({\n      transactions\n    });\n  }\n\n  _setTransactionStatus(txId, status) {\n    const txMeta = this.getTransaction(txId);\n\n    if (!txMeta) {\n      return;\n    }\n\n    txMeta.status = status; // only updating status so no validation required on txn.\n\n    this.updateTransaction(txMeta);\n    this.emit(TX_EVENTS.TX_STATUS_UPDATE, {\n      txId,\n      status\n    });\n\n    if (this.isFinalState(status)) {\n      this.emit(\"\".concat(txMeta.id, \":finished\"), txMeta);\n    } else {\n      this.emit(\"\".concat(txMeta.id, \":\").concat(status), txId);\n    }\n  }\n\n}\n\nexport { ACCOUNT_CATEGORY, ACTIVITY_ACTION, ACTIVITY_ACTION_ALL, ACTIVITY_ACTION_RECEIVE, ACTIVITY_ACTION_SEND, ACTIVITY_ACTION_TOPUP, ACTIVITY_PERIOD_ALL, ACTIVITY_PERIOD_MONTH_ONE, ACTIVITY_PERIOD_MONTH_SIX, ACTIVITY_PERIOD_WEEK_ONE, ACTIVITY_STATUS_CANCELLED, ACTIVITY_STATUS_CANCELLING, ACTIVITY_STATUS_PENDING, ACTIVITY_STATUS_SUCCESSFUL, ACTIVITY_STATUS_UNSUCCESSFUL, BROADCAST_CHANNELS, BROADCAST_CHANNELS_MSGS, BaseBlockTracker, BaseController, BaseCurrencyController, BaseEmbedController, BaseKeyringController, BasePreferencesController, BaseTransactionStateManager, BroadcastChannelHandler, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWindowManager, DEFAULT_PREFERENCES, FEATURES_CONFIRM_WINDOW, FEATURES_DEFAULT_POPUP_WINDOW, FEATURES_DEFAULT_WALLET_WINDOW, FEATURES_PROVIDER_CHANGE_WINDOW, LOGIN_PROVIDER, PAYMENT_PROVIDER, POPUP_LOADED, POPUP_RESULT, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS, PopupHandler, PopupStoreChannel, PopupWithBcHandler, RedirectHandler, SETUP_COMPLETE, StreamWindow, TRANSACTION_TYPES, TX_EVENTS, TransactionStatus, UserError, addressSlicer, broadcastChannelOptions, concatSig, createChangeProviderMiddlewareMiddleware, createCommunicationMiddleware, createEventEmitterProxy, createFetchConfigFromReq, createFetchMiddleware, createGenericJRPCMiddleware, createLoggerMiddleware, createOriginMiddleware, createRandomId, createSwappableProxy, createTopupMiddleware, formatDate, formatSmallNumbers, formatTime, getCustomDeviceInfo, getHeaders, getPopupFeatures, getTxStatusText, handleRedirectParameters, hashMessage, intToHex, padWithZeroes, providerAsMiddleware, providerFromEngine, providerFromMiddleware, randomId, signMessage, significantDigits, sleep, timeout$1 as timeout, transactionMatchesNetwork };\n//# sourceMappingURL=baseControllers.esm.js.map\n",null,null,null,null,null,null,null,null,null,"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fillOptionsWithDefaults = fillOptionsWithDefaults;\n\nvar _util = require(\"./util\");\n\nfunction fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n  if (typeof options.support3PC === 'undefined') options.support3PC = (0, _util.are3PCSupported)(); // main\n\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true; // indexed-db\n\n  if (!options.idb) options.idb = {}; //  after this time the messages get deleted\n\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150; //  handles abrupt db onclose events.\n\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose; // localstorage\n\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60; // server\n\n  if (!options.server) options.server = {};\n  if (!options.server.url) options.server.url = 'https://broadcast-server.tor.us';\n  if (!options.server.removeTimeout) options.server.removeTimeout = 1000 * 60 * 5; // 5 minutes\n  // custom methods\n\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n  return options;\n}","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */ (function () {\n    function ObliviousSet(ttl) {\n        this.ttl = ttl;\n        this.map = new Map();\n        /**\n         * Creating calls to setTimeout() is expensive,\n         * so we only do that if there is not timeout already open.\n         */\n        this._to = false;\n    }\n    ObliviousSet.prototype.has = function (value) {\n        return this.map.has(value);\n    };\n    ObliviousSet.prototype.add = function (value) {\n        var _this = this;\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(function () {\n                _this._to = false;\n                removeTooOldValues(_this);\n            }, 0);\n        }\n    };\n    ObliviousSet.prototype.clear = function () {\n        this.map.clear();\n    };\n    return ObliviousSet;\n}());\nexport { ObliviousSet };\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    var olderThen = now() - obliviousSet.ttl;\n    var iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        var next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        var value = next[0];\n        var time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return new Date().getTime();\n}\n//# sourceMappingURL=index.js.map","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { BaseController, createEventEmitterProxy, providerFromEngine } from '@toruslabs/base-controllers';\nimport { WalletInitializationError } from '@web3auth/base';\nimport { ethErrors } from 'eth-rpc-errors';\nimport { JRPCEngine, createScaffoldMiddleware, createAsyncMiddleware } from '@toruslabs/openlogin-jrpc';\nimport getCreateRandomId from 'json-rpc-random-id';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass BaseProvider extends BaseController {\n  // should be Assigned in setupProvider\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"_providerEngineProxy\", null);\n\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\"\n    };\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: {\n        [config.chainConfig.chainId]: config.chainConfig\n      }\n    };\n    super.initialize();\n  }\n\n  get provider() {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  addChain(chainConfig) {\n    if (!chainConfig.chainId) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: _objectSpread(_objectSpread({}, this.config.networks), {}, {\n        [chainConfig.chainId]: chainConfig\n      })\n    });\n  }\n\n  getChainConfig(chainId) {\n    var _this$config$networks;\n\n    const chainConfig = (_this$config$networks = this.config.networks) === null || _this$config$networks === void 0 ? void 0 : _this$config$networks[chainId];\n    if (!chainConfig) throw ethErrors.rpc.invalidRequest(\"Chain \".concat(chainId, \" is not supported, please add chainConfig for it\"));\n    return chainConfig;\n  }\n\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n\n  updateProviderEngineProxy(providerEngineProxy) {\n    if (this._providerEngineProxy) {\n      this._providerEngineProxy.setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy(providerEngineProxy);\n    }\n  }\n\n}\n\nclass CommonPrivateKeyProvider {\n  constructor() {\n    _defineProperty(this, \"_providerEngineProxy\", null);\n  }\n\n  get provider() {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  addChain(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  async setupProvider(privKey) {\n    const privKeyMiddleware = this.getPrivKeyMiddleware(privKey);\n    const engine = new JRPCEngine();\n    engine.push(privKeyMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n\n  updateProviderEngineProxy(providerEngineProxy) {\n    if (this._providerEngineProxy) {\n      this._providerEngineProxy.setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy(providerEngineProxy);\n    }\n  }\n\n  getPrivKeyMiddleware(privKey) {\n    const middleware = {\n      getPrivatekey: async () => {\n        return privKey;\n      }\n    };\n    return this.createPrivKeyMiddleware(middleware);\n  }\n\n  createPrivKeyMiddleware(_ref) {\n    let {\n      getPrivatekey\n    } = _ref;\n\n    async function getPrivatekeyHandler(_, res) {\n      res.result = await getPrivatekey();\n    }\n\n    return createScaffoldMiddleware({\n      private_key: createAsyncMiddleware(getPrivatekeyHandler)\n    });\n  }\n\n}\n\n_defineProperty(CommonPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new CommonPrivateKeyProvider();\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nconst createRandomId = getCreateRandomId();\n\nexport { BaseProvider, CommonPrivateKeyProvider, createRandomId };\n//# sourceMappingURL=baseProvider.esm.js.map\n",null,"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { setAPIKey, setEmbedHost, post } from '@toruslabs/http-helpers';\nimport stringify from 'json-stable-stringify';\nimport { ec as ec$1 } from 'elliptic';\nimport createKeccakHash from 'keccak';\nimport { encrypt, getPublic, decrypt } from '@toruslabs/eccrypto';\n\nfunction keccak256(a) {\n  return createKeccakHash(\"keccak256\").update(a).digest();\n}\nconst ec = new ec$1(\"secp256k1\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass MetadataStorageLayer {\n  // ms\n  constructor() {\n    let metadataHost = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"https://metadata.tor.us\";\n    let serverTimeOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _defineProperty(this, \"metadataHost\", void 0);\n\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n\n    this.metadataHost = metadataHost;\n    this.serverTimeOffset = serverTimeOffset;\n  }\n\n  static setAPIKey(apiKey) {\n    setAPIKey(apiKey);\n  }\n\n  static setEmbedHost(embedHost) {\n    setEmbedHost(embedHost);\n  }\n\n  generateMetadataParams(message, privateKeyHex) {\n    var _ref, _sig$recoveryParam;\n\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    const setData = {\n      data: message,\n      timestamp: Math.floor(this.serverTimeOffset + Date.now() / 1000).toString(16)\n    };\n    const sig = key.sign(keccak256(stringify(setData)));\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n      set_data: setData,\n      signature: Buffer.from((_ref = sig.r.toString(16, 64) + sig.s.toString(16, 64) + ((_sig$recoveryParam = sig.recoveryParam) === null || _sig$recoveryParam === void 0 ? void 0 : _sig$recoveryParam.toString(16).padStart(2, \"0\").slice(-2))) !== null && _ref !== void 0 ? _ref : \"00\", \"hex\").toString(\"base64\")\n    };\n  }\n\n  generatePubKeyParams(privateKeyHex) {\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    return {\n      pub_key_X: key.getPublic().getX().toString(\"hex\"),\n      pub_key_Y: key.getPublic().getY().toString(\"hex\")\n    };\n  }\n\n  async setMetadata(data, namespace, options) {\n    const params = namespace !== null ? _objectSpread(_objectSpread({}, data), {}, {\n      namespace\n    }) : data;\n    const metadataResponse = await post(\"\".concat(this.metadataHost, \"/set\"), params, options, {\n      useAPIKey: true\n    });\n    return metadataResponse.message;\n  }\n\n  async getMetadata(pubKey, namespace, options) {\n    const params = namespace !== null ? _objectSpread(_objectSpread({}, pubKey), {}, {\n      namespace\n    }) : pubKey;\n    const metadataResponse = await post(\"\".concat(this.metadataHost, \"/get\"), params, options, {\n      useAPIKey: true\n    });\n    return metadataResponse.message;\n  }\n\n}\n\nconst WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nconst WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\nfunction encParamsHexToBuf(encParamsHex) {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\")\n  };\n}\nfunction encParamsBufToHex(encParams) {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\")\n  };\n}\nasync function encryptData(privKeyHex, d) {\n  const serializedDec = JSON.stringify(d);\n  const serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n  const encParams = await encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n  const encParamsHex = encParamsBufToHex(encParams);\n  const sData = JSON.stringify(encParamsHex);\n  return sData;\n}\nasync function decryptData(privKeyHex, d) {\n  const encParamsHex = JSON.parse(d);\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const serializedBuf = await decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedDec = serializedBuf.toString(\"utf-8\");\n  const data = JSON.parse(serializedDec);\n  return data;\n}\nasync function getAndDecryptData(m, privKeyHex, namespace) {\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const pubKey = keyPair.getPublic();\n  const serializedData = await m.getMetadata({\n    pub_key_X: pubKey.getX().toString(16),\n    pub_key_Y: pubKey.getY().toString(16)\n  }, namespace);\n\n  if (!serializedData) {\n    return null;\n  }\n\n  const data = await decryptData(privKeyHex, serializedData);\n  return data;\n}\nasync function encryptAndSetData(m, privKeyHex, d, namespace) {\n  const sData = await encryptData(privKeyHex, d);\n  const metadataParams = m.generateMetadataParams(sData, privKeyHex);\n  await m.setMetadata(metadataParams, namespace);\n}\nasync function setTorusShare(m, webAuthnPubKey, webAuthnRefHex, subspace, subspaceData) {\n  const refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = refKeyPair.getPrivate();\n  const pubKey = ec.keyFromPublic({\n    x: webAuthnPubKey.pub_key_X,\n    y: webAuthnPubKey.pub_key_Y\n  });\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  let d = {};\n  if (data) d = data;\n  const serializedSubspaceData = JSON.stringify(subspaceData);\n  const serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n  const encSubspaceData = await encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n  const encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n  d[subspace] = encSubspaceDataHex;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n}\nasync function setDeviceShare(m, webAuthnRefHex, subspace, subspaceData) {\n  const keyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = keyPair.getPrivate();\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  let d = {};\n  if (data) d = data;\n  d[subspace] = subspaceData;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n}\nasync function getTorusShare(m, webAuthnKeyHex, webAuthnRefHex, subspace) {\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  if (!data) return null;\n  const encParamsHex = data[subspace];\n  if (!encParamsHex) return null;\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n  const privKey = keyPair.getPrivate();\n  const serializedSubspaceDataBuf = await decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n  const subspaceData = JSON.parse(serializedSubspaceData);\n  return subspaceData;\n}\nasync function getDeviceShare(m, webAuthnRefHex, subspace) {\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  if (data) return data[subspace];\n  return null;\n}\n\nexport { decryptData, MetadataStorageLayer as default, ec, encParamsBufToHex, encParamsHexToBuf, encryptAndSetData, encryptData, getAndDecryptData, getDeviceShare, getTorusShare, keccak256, setDeviceShare, setTorusShare };\n//# sourceMappingURL=metadataHelpers.esm.js.map\n","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","\"use strict\";\n\nvar _index = require(\"./index.js\");\n\n/**\n * because babel can only export on default-attribute,\n * we use this for the non-module-build\n * this ensures that users do not have to use\n * var BroadcastChannel = require('broadcast-channel').default;\n * but\n * var BroadcastChannel = require('broadcast-channel');\n */\nmodule.exports = {\n  BroadcastChannel: _index.BroadcastChannel,\n  enforceOptions: _index.enforceOptions\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BroadcastChannel\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.BroadcastChannel;\n  }\n});\nObject.defineProperty(exports, \"OPEN_BROADCAST_CHANNELS\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.OPEN_BROADCAST_CHANNELS;\n  }\n});\nObject.defineProperty(exports, \"enforceOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.enforceOptions;\n  }\n});\n\nvar _broadcastChannel = require(\"./broadcast-channel\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OPEN_BROADCAST_CHANNELS = exports.BroadcastChannel = void 0;\nexports.enforceOptions = enforceOptions;\n\nvar _util = require(\"./util.js\");\n\nvar _methodChooser = require(\"./method-chooser.js\");\n\nvar _options = require(\"./options.js\");\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nvar OPEN_BROADCAST_CHANNELS = new Set();\nexports.OPEN_BROADCAST_CHANNELS = OPEN_BROADCAST_CHANNELS;\nvar lastId = 0;\n\nvar BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n\n  this.options = (0, _options.fillOptionsWithDefaults)(options);\n  this.method = (0, _methodChooser.chooseMethod)(this.options); // isListening\n\n  this._iL = false;\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n\n  this._onML = null;\n  /**\n   * _addEventListeners\n   */\n\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n  /**\n   * Unsend message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n\n  this._uMP = new Set();\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n\n  this._befC = [];\n  /**\n   * _preparePromise\n   */\n\n  this._prepP = null;\n\n  _prepareChannel(this);\n}; // STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\n\n\nexports.BroadcastChannel = BroadcastChannel;\nBroadcastChannel._pubkey = true;\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\n\nvar ENFORCED_OPTIONS;\n\nfunction enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n} // PROTOTYPE\n\n\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was realy hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _removeListenerObject(this, 'message', this._onML);\n\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n\n    if (this.closed) {\n      return;\n    }\n\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : _util.PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    }) // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    }) // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n\n  get type() {\n    return this.method.type;\n  },\n\n  get isClosed() {\n    return this.closed;\n  }\n\n};\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\n\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : _util.PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj); // add/remove to unsend messages list\n\n    broadcastChannel._uMP.add(sendPromise);\n\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\n\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n\n  if ((0, _util.isPromise)(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\n\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\n\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n\n  _startListening(channel);\n}\n\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n\n  _stopListening(channel);\n}\n\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happend 'after' the listener\n         * was added, we also listen to events that happended 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        } else if (channel.method.type === 'server') {\n          // server msg might lag based on connection.\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n\n    var time = channel.method.microSeconds();\n\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\n\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // noone is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseMethod = chooseMethod;\n\nvar _native = _interopRequireDefault(require(\"./methods/native.js\"));\n\nvar _indexedDb = _interopRequireDefault(require(\"./methods/indexed-db.js\"));\n\nvar _localstorage = _interopRequireDefault(require(\"./methods/localstorage.js\"));\n\nvar _server = _interopRequireDefault(require(\"./methods/server.js\"));\n\nvar _simulate = _interopRequireDefault(require(\"./methods/simulate.js\"));\n\n// order is important\nvar METHODS = [_native[\"default\"], // fastest\n_indexedDb[\"default\"], _localstorage[\"default\"], _server[\"default\"]];\n\nfunction chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean); // directly chosen\n\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return _simulate[\"default\"];\n    }\n\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n\n\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed(options);\n  });\n  if (!useMethod) throw new Error(\"No useable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'native';\nexports.type = type;\n\nfunction create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\n\nfunction close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\n\nfunction postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return _util.PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed(options) {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (typeof window === 'undefined') return false;\n  if (!options.support3PC) return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\n\nfunction averageResponseTime() {\n  return 150;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TRANSACTION_SETTINGS = void 0;\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.cleanOldMessages = cleanOldMessages;\nexports.close = close;\nexports.commitIndexedDBTransaction = commitIndexedDBTransaction;\nexports.create = create;\nexports.createDatabase = createDatabase;\nexports[\"default\"] = void 0;\nexports.getAllMessages = getAllMessages;\nexports.getIdb = getIdb;\nexports.getMessagesHigherThan = getMessagesHigherThan;\nexports.getOldMessages = getOldMessages;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeMessagesById = removeMessagesById;\nexports.type = void 0;\nexports.writeMessage = writeMessage;\n\nvar _util = require(\"../util.js\");\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\n/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n *\n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\n\nvar TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexports.TRANSACTION_SETTINGS = TRANSACTION_SETTINGS;\nvar type = 'idb';\nexports.type = type;\n\nfunction getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n\n  return false;\n}\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\n\n\nfunction commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\n\nfunction createDatabase(channelName) {\n  var IndexedDB = getIdb(); // create table\n\n  var dbName = DB_PREFIX + channelName;\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n\n  var openRequest = IndexedDB.open(dbName);\n\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n\n  var dbPromise = new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n  return dbPromise;\n}\n/**\n * writes the new message to the database\n * so other readers can find it\n */\n\n\nfunction writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\n\nfunction getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        ret.push(cursor.value); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction removeMessagesById(db, ids) {\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\n\nfunction getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        var msgObk = cursor.value;\n\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n          return;\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction cleanOldMessages(db, ttl) {\n  return getOldMessages(db, ttl).then(function (tooOld) {\n    return removeMessagesById(db, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: (0, _util.randomToken)(),\n\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new _obliviousSet.ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parrallel\n      writeBlockPromise: _util.PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n\n\n    _readLoop(state);\n\n    return state;\n  });\n}\n\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return (0, _util.sleep)(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\n\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n\n  return true;\n}\n/**\n * reads all new messages from the database and emits them\n */\n\n\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return _util.PROMISE_RESOLVED_VOID; // if no one is listening, we do not need to scan for new messages\n\n  if (!state.messagesCallback) return _util.PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined some times\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */\n    .filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return _util.PROMISE_RESOLVED_VOID;\n  });\n}\n\nfunction close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\n\nfunction postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if ((0, _util.randomInt)(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState.db, channelState.options.idb.ttl);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\n\nfunction canBeUsed(options) {\n  if (!options.support3PC) return false;\n  var idb = getIdb();\n  if (!idb) return false;\n  return true;\n}\n\nfunction averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addStorageEventListener = addStorageEventListener;\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getLocalStorage = getLocalStorage;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.storageKey = storageKey;\nexports.type = void 0;\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\nvar _util = require(\"../util\");\n\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexports.type = type;\n\nfunction getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\n\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n * writes the new message to the storage\n * and fires the storage-event so other readers can find it\n */\n\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    (0, _util.sleep)().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: (0, _util.randomToken)(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\n\nfunction addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\n\nfunction removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n\n  if (!canBeUsed(options)) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = (0, _util.randomToken)();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new _obliviousSet.ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\n\nfunction close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed(options) {\n  if (!options.support3PC) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\n\nfunction averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getSocketInstance = getSocketInstance;\nexports.keccak256 = keccak256;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.setupSocketConnection = setupSocketConnection;\nexports.storageKey = storageKey;\nexports.type = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _socket = require(\"socket.io-client\");\n\nvar _eccrypto = require(\"@toruslabs/eccrypto\");\n\nvar _metadataHelpers = require(\"@toruslabs/metadata-helpers\");\n\nvar _keccak = _interopRequireDefault(require(\"keccak\"));\n\nvar _util = require(\"../util\");\n\nvar _options = require(\"../options\");\n\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nvar microSeconds = _util.microSeconds; // PASS IN STRING/BUFFER TO GET BUFFER\n\nexports.microSeconds = microSeconds;\n\nfunction keccak256(a) {\n  return (0, _keccak[\"default\"])('keccak256').update(a).digest();\n}\n\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'server';\nexports.type = type;\nvar SOCKET_CONN_INSTANCE = null;\n\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n * writes the new message to the storage\n * and fires the storage-event so other readers can find it\n */\n\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res, rej) {\n    (0, _util.sleep)().then( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      var key, channelEncPrivKey, encData, body;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              key = storageKey(channelState.channelName);\n              channelEncPrivKey = keccak256(key);\n              _context.next = 4;\n              return (0, _metadataHelpers.encryptData)(channelEncPrivKey.toString('hex'), {\n                token: (0, _util.randomToken)(),\n                time: new Date().getTime(),\n                data: messageJson,\n                uuid: channelState.uuid\n              });\n\n            case 4:\n              encData = _context.sent;\n              _context.t0 = (0, _eccrypto.getPublic)(channelEncPrivKey).toString('hex');\n              _context.t1 = encData;\n              _context.next = 9;\n              return (0, _eccrypto.sign)(channelEncPrivKey, keccak256(encData));\n\n            case 9:\n              _context.t2 = _context.sent.toString('hex');\n              body = {\n                key: _context.t0,\n                data: _context.t1,\n                signature: _context.t2\n              };\n              if (channelState.timeout) body.timeout = channelState.timeout;\n              return _context.abrupt(\"return\", fetch(channelState.serverUrl + '/channel/set', {\n                method: 'POST',\n                body: JSON.stringify(body),\n                headers: {\n                  'Content-Type': 'application/json; charset=utf-8'\n                }\n              }).then(res)[\"catch\"](rej));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n  });\n}\n\nfunction getSocketInstance(serverUrl) {\n  if (SOCKET_CONN_INSTANCE) {\n    return SOCKET_CONN_INSTANCE;\n  }\n\n  var SOCKET_CONN = (0, _socket.io)(serverUrl, {\n    transports: ['websocket', 'polling'],\n    // use WebSocket first, if available\n    withCredentials: true,\n    reconnectionDelayMax: 10000,\n    reconnectionAttempts: 10\n  });\n  SOCKET_CONN.on('connect_error', function (err) {\n    // revert to classic upgrade\n    SOCKET_CONN.io.opts.transports = ['polling', 'websocket'];\n\n    _util.log.error('connect error', err);\n  });\n  SOCKET_CONN.on('connect', /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var engine;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            engine = SOCKET_CONN.io.engine;\n\n            _util.log.debug('initially connected to', engine.transport.name); // in most cases, prints \"polling\"\n\n\n            engine.once('upgrade', function () {\n              // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n              _util.log.debug('upgraded', engine.transport.name); // in most cases, prints \"websocket\"\n\n            });\n            engine.once('close', function (reason) {\n              // called when the underlying connection is closed\n              _util.log.debug('connection closed', reason);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n  SOCKET_CONN.on('error', function (err) {\n    _util.log.error('socket errored', err);\n\n    SOCKET_CONN.disconnect();\n  });\n  SOCKET_CONN.on('disconnect', function () {\n    _util.log.debug('socket disconnected');\n  });\n  SOCKET_CONN_INSTANCE = SOCKET_CONN;\n  return SOCKET_CONN;\n}\n\nfunction setupSocketConnection(serverUrl, channelName, fn) {\n  var socketConn = getSocketInstance(serverUrl);\n  var key = storageKey(channelName);\n  var channelEncPrivKey = keccak256(key);\n  var channelPubKey = (0, _eccrypto.getPublic)(channelEncPrivKey).toString('hex');\n\n  if (socketConn.connected) {\n    socketConn.emit('check_auth_status', channelPubKey);\n  } else {\n    socketConn.once('connect', function () {\n      _util.log.debug('connected with socket');\n\n      socketConn.emit('check_auth_status', channelPubKey);\n    });\n  }\n\n  var visibilityListener = function visibilityListener() {\n    // if channel is closed, then remove the listener.\n    if (!socketConn) {\n      document.removeEventListener('visibilitychange', visibilityListener);\n      return;\n    } // if not connected, then wait for connection and ping server for latest msg.\n\n\n    if (!socketConn.connected && document.visibilityState === 'visible') {\n      socketConn.once('connect', /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                socketConn.emit('check_auth_status', channelPubKey);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n    }\n  };\n\n  var listener = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(ev) {\n      var decData;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return (0, _metadataHelpers.decryptData)(channelEncPrivKey.toString('hex'), ev);\n\n            case 3:\n              decData = _context4.sent;\n\n              _util.log.info(decData);\n\n              fn(decData);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n\n              _util.log.error(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    return function listener(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  socketConn.on(channelPubKey + \"_success\", listener);\n  document.addEventListener('visibilitychange', visibilityListener);\n  return socketConn;\n}\n\nfunction removeStorageEventListener() {\n  if (SOCKET_CONN_INSTANCE) {\n    SOCKET_CONN_INSTANCE.disconnect();\n  }\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n\n  if (!canBeUsed(options)) {\n    throw new Error('BroadcastChannel: server cannot be used');\n  }\n\n  var uuid = (0, _util.randomToken)();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new _obliviousSet.ObliviousSet(options.server.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs,\n    // emittedMessagesIds\n    serverUrl: options.server.url\n  };\n  if (options.server.timeout) state.timeout = options.server.timeout;\n  setupSocketConnection(options.server.url, channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === state.uuid) return; // own message\n\n    if (!msgObj.token || state.eMIs.has(msgObj.token)) return; // already emitted\n    // if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    state.eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\n\nfunction close() {// give 2 sec for all msgs which are in transit to be consumed\n  // by receiver.\n  // window.setTimeout(() => {\n  //     removeStorageEventListener(channelState);\n  //     SOCKET_CONN_INSTANCE = null;\n  // }, 1000);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  var defaultTime = 500; // TODO: Maybe increase it based on operation\n\n  return defaultTime;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n",null,null,"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'simulate';\nexports.type = type;\nvar SIMULATE_CHANNELS = new Set();\n\nfunction create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\n\nfunction close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  return 5;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"sourceRoot":""}